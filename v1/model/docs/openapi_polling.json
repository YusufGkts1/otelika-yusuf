{
    "openapi": "3.0.0",
    "info": {
        "title": "ERP",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "https://api.gungoren-dev.com/v1",
            "description": "Pre Production Server"
        },
        {
            "url": "https://api.gungoren.bel.tr/v1",
            "description": "Production Server"
        },
        {
            "url": "localhost:8080/v1",
            "description": "Local Environment"
        }
    ],
    "paths": {
        "/file": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "Get file",
                "operationId": "840ad7ab0ceb8213e6031b62217aae22",
                "parameters": [
                    {
                        "parameter": "token",
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/octet-stream": {}
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/file/upload": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Upload File",
                "description": "Uploads file to the server and returns a unique ID that represents this file. Attach this unique ID to requests to claim this file. Unclaimed files will be removed after 1 hour",
                "operationId": "7aec4543a81d8f38b5966c07c320a0e2",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Key - ID pairs",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "description": "key sent with the request",
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "unique id created by the server",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/file/zip": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Zip Files",
                "description": "Create a zip file from given file URIs and returns the URI for that zip file. Unauthorized or non-existing files will be skipped.",
                "operationId": "8b9dead31b4b8a71841fc8b671b681db",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "properties": {
                                                    "files": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "uri": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/polling/polling/auth": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Check If Authorized",
                "description": "Returns 401 if logged in user is not allowed to access this module, 204 if allowed",
                "operationId": "f37f950dd27ca670bdad7db865598266",
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/polling/polling/queue": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Fetch Queues",
                "operationId": "8f6369becad67db4a6a60884e67444a6",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_queue_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_queue_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_queue"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Queue"
                ],
                "summary": "Create a SMS queue",
                "description": "A queue won't send any messages for the first 5 minutes after it's creation",
                "operationId": "d886760a58fc356b0e9100d8e21dab16",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_queue_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_queue"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/queue/{queue_id}": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Get Single Queue",
                "operationId": "ba2c15d5ea9caaaf39b802ef8202f62e",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/queue_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_queue"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Queue"
                ],
                "summary": "Cancel and Remove a Queue",
                "operationId": "9e59d837ca8565592761e73d6ba2e9b3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/queue_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Queue"
                ],
                "summary": "Update a Queue",
                "description": "Use property `is_paused` to pause/resume a queue",
                "operationId": "64234055f07a7e31b0b50bcbf088462f",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/queue_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_queue_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_queue"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message/expression": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get Dynamic Expressions",
                "description": "Sample data: \n\n\t{\n\t\t'data': [\n\t\t\t'{{ad}}',\n\t\t\t'{{soyad}}',\n\t\t\t'{{telefon}}',\n\t\t\t'{{kimlik_no}}',\n\t\t\t'{{tckk_seri_no}}',\n\t\t\t'{{adres_no}}',\n\t\t\t'{{mahalle}}',\n\t\t\t'{{csbm}}',\n\t\t\t'{{bina_no}}',\n\t\t\t'{{ada}}',\n\t\t\t'{{parsel}}',\n\t\t\t'{{dis_kapi_no}}',\n\t\t\t'{{ic_kapi_no}}',\n\t\t\t'{{anket}}'\n\t\t]\n\t}",
                "operationId": "bddd3b2381170aa93b47595bb02e76d8",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message/{message_id}": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get Single Message",
                "operationId": "13caf48fbd0bf315cbafb59217865373",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/pending_direct_message": {
            "get": {
                "tags": [
                    "DirectMessage"
                ],
                "summary": "Fetch Pending Direct Messages",
                "operationId": "d2269d38087a87809e646af8f8949c5b",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_pending_direct_message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/failed_direct_message": {
            "get": {
                "tags": [
                    "DirectMessage"
                ],
                "summary": "Fetch Failed Direct Messages",
                "operationId": "943fdd3add0a32bbbf7c2dfc480529ee",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_failed_direct_message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/queue/{queue_id}/error": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Fetch Queue Errors",
                "operationId": "55a70f9a73179064dae03937bb9d947a",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_message_error"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/filter/options": {
            "get": {
                "tags": [
                    "Filter"
                ],
                "summary": "Get Filter Options",
                "description": "Returns options usable in filter.\n\n\tdata: {\n\t\tproperty: {\n\t\t\toperators: [\n\t\t\t\t{\n\t\t\t\t\t'value': 'eq',\n\t\t\t\t\t'name': 'Eşittir'\n\t\t\t\t},\n\t\t\t\t...\n\t\t\t],\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\t'value': '1',\n\t\t\t\t\t'name': 'Bekar'\n\t\t\t\t},\n\t\t\t\t...\n\t\t\t]\n\t\t}\n\t}\n\n\t *\t\tvalues can be omitted. Any value can be specified if values is omitted\n",
                "operationId": "5aa0d7ba549449bb8b1fdef87c793de8",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "property": {
                                                    "properties": {
                                                        "operators": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "value": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "values": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "value": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/citizen/search?phrase={phrase}": {
            "get": {
                "tags": [
                    "Citizen"
                ],
                "summary": "Search for a Citizen",
                "description": "Verilen ifade `ad`, `soyad`, `telefon`, `kimlik numarası`, `anne adı`, `baba adı`, `cüzdan numarası` ve `tckk seri numarası` bilgileri içerisinde aranır",
                "operationId": "618e8ba48c17895c167d6643e2ac6cad",
                "parameters": [
                    {
                        "parameter": "polling_search_phrase",
                        "name": "phrase",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_citizen"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/queue/{queue_id}/search?phrase={phrase}": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Search for a Citizen in Queue",
                "description": "Verilen ifade `ad`, `soyad`, `kimlik numarası`, `anne adı`, `baba adı`, `cüzdan numarası` ve `tckk seri numarası` bilgileri içerisinde aranır",
                "operationId": "ea4fa002cbb7032873657578418792dc",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/queue_id"
                    },
                    {
                        "parameter": "polling_search_phrase",
                        "name": "phrase",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "$ref": "#/components/schemas/polling_citizen"
                                                    },
                                                    {
                                                        "property": "meta",
                                                        "properties": {
                                                            "meta": {
                                                                "properties": {
                                                                    "status": {
                                                                        "description": "Queue message status. `1 = Message has not yet been sent to the citizen`, `2 = Message has been sent to the citizen successfully`, `3 = There was an error when sending the message to the citizen`",
                                                                        "type": "integer",
                                                                        "enum": [
                                                                            1,
                                                                            2,
                                                                            3
                                                                        ]
                                                                    },
                                                                    "status_str": {
                                                                        "description": "Queue message status. `1 = Message has not yet been sent to the citizen`, `2 = Message has been sent to the citizen successfully`, `3 = There was an error when sending the message to the citizen`",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "queued",
                                                                            "successful",
                                                                            "failed"
                                                                        ]
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/citizen/{citizen_id}": {
            "get": {
                "tags": [
                    "Citizen"
                ],
                "summary": "Get Citizen",
                "operationId": "fca345d3df6783f073f5222e38e358fb",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_citizen_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_citizen"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/citizen/{citizen_id}/message": {
            "get": {
                "tags": [
                    "Citizen"
                ],
                "summary": "Fetch Citizen Messages",
                "operationId": "22af6ede5f8a02efd11dea61bdee4ebf",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_include"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/citizen/{citizen_id}/survey": {
            "get": {
                "tags": [
                    "Survey"
                ],
                "summary": "Fetch Citizen Surveys",
                "operationId": "15eccb93fa0f196e461db4c6a56f19d5",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_survey_over_citizen_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_survey_over_citizen_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_survey"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message_template": {
            "get": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Fetch Message Templates",
                "operationId": "ec90c98b677efa763ec479daa3de5f03",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_template_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_template_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_message_template"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Create a Message Template",
                "operationId": "188309ee4546870883ecd8cd65f926c2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_message_template_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message_template/{message_template_id}": {
            "get": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Get Single Message Template",
                "operationId": "4f8e71190c78e0e47cf1377d3c36c56e",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_template_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Remove a Message Template",
                "operationId": "79a8c03f35260d7e5e6219fe6dca2b94",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_template_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            },
            "patch": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Update a Message Template",
                "operationId": "fbd850a56474711dedd692ab1bc3254d",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_template_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_message_template_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/filter_template": {
            "get": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Fetch Filter Templates",
                "operationId": "12c6b791fe138883663e17b84651d887",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_filter_template_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_filter_template_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_filter_template"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Create a Filter Template",
                "operationId": "208b280f0e2481f556ac9b360ac06715",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_filter_template_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_filter_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/filter_template/{filter_template_id}": {
            "get": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Get Single Filter Template",
                "operationId": "0ed1acfa36b944042e2954cde9d762e3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_filter_template_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_filter_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Remove a Filter Template",
                "operationId": "e82e16fb5656bafc8cd706c55f071db6",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_filter_template_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            },
            "patch": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Update a Filter Template",
                "operationId": "5a7e1eb5a867aa226f61abb05474f9e7",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_filter_template_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_category_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_filter_template_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_filter_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/category": {
            "get": {
                "tags": [
                    "Category (Citizen)"
                ],
                "summary": "Fetch Categories",
                "description": "Pagination is disabled for this endpoint",
                "operationId": "510f09f739d821e87bd173fd804cf3f4",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_category_include"
                    },
                    {
                        "$ref": "#/components/parameters/polling_citizen_category_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_citizen_category_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_tag_category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Category (Citizen)"
                ],
                "summary": "Create Category",
                "operationId": "d6fd601db50fe1b59c00991c327e0021",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_category_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_citizen_category_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_tag_category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "enum": [
                                                            7022,
                                                            7007
                                                        ]
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Category with name already exists",
                                                            "Color must be a valid hex representation. Ex: 3f8a18"
                                                        ]
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/category/{category}": {
            "get": {
                "tags": [
                    "Category (Citizen)"
                ],
                "summary": "Get Category",
                "operationId": "d99598cd96a414c16d76fe13caa8715d",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_category_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_category_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_tag_category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/tag": {
            "get": {
                "tags": [
                    "Tag (Citizen)"
                ],
                "summary": "Fetch Tags",
                "description": "Pagination is disabled for this endpoint",
                "operationId": "a5508ed4e18d716ac9ba329f794cc0b6",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_tag_include"
                    },
                    {
                        "$ref": "#/components/parameters/polling_citizen_tag_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_citizen_tag_sort"
                    },
                    {
                        "$ref": "#/components/parameters/polling_citizen_tag_selection"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_citizen_tag"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tag (Citizen)"
                ],
                "summary": "Create Tag",
                "operationId": "fbd38430a701982264ee3613926dc9f1",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_tag_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_citizen_tag_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_citizen_tag"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "code": {
                                                        "type": "integer",
                                                        "enum": [
                                                            7006,
                                                            7007
                                                        ]
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Tag with value already exists",
                                                            "Color must be a valid hex representation. Ex: 3f8a18"
                                                        ]
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/tag/{tag_id}": {
            "get": {
                "tags": [
                    "Tag (Citizen)"
                ],
                "summary": "Get Tag",
                "operationId": "c9e415779bb1c361e94f452a707177e5",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_tag_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_tag_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_citizen_tag"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tag (Citizen)"
                ],
                "summary": "Remove Tag",
                "description": "Also removes this tag from assigned citizens",
                "operationId": "c52505fe8a35840ec6d263733f3e91e4",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_tag_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tag (Citizen)"
                ],
                "summary": "Update a Tag",
                "operationId": "90afe63f36d4772dc44dd58dfed76582",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_tag_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_tag_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_citizen_tag_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_citizen_tag"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/survey": {
            "get": {
                "tags": [
                    "Survey"
                ],
                "summary": "Fetch Surveys",
                "operationId": "d2dd10b771d5680cc9bb8a4450a761f5",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_survey_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_survey_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_survey"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Survey"
                ],
                "summary": "Create a Survey",
                "operationId": "9052187efce7f663617a042e1b613b83",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_survey_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_survey"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/survey/{survey_id}": {
            "get": {
                "tags": [
                    "Survey"
                ],
                "summary": "Get Survey",
                "operationId": "f573e1ea77cc211c0a52845f5c3155f5",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_survey_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_survey"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Survey"
                ],
                "summary": "Remove a Survey",
                "description": "Sets `is_hidden` property of the survey to `2 = Hidden`. Removed surveys are still accessible using `is_hidden` filter",
                "operationId": "3e3dfad39668d3608d519218249186f8",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_survey_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Survey"
                ],
                "summary": "Update a Survey",
                "operationId": "87c92817534290f5d589e2e40d0a1c94",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_survey_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_survey_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_survey"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/tag_rule/{tag_rule_id}": {
            "get": {
                "tags": [
                    "Tag Rule"
                ],
                "summary": "Get Tag Rule",
                "operationId": "38261e55b0c10eb27cd773fcf2c42c87",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/tag_rule_filter"
                    },
                    {
                        "$ref": "#/components/parameters/tag_rule_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_tag_rule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tag Rule"
                ],
                "summary": "Remove a Tag Rule",
                "operationId": "25f4a91b77858518b629989464f32782",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/tag_rule_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tag Rule"
                ],
                "summary": "Update a Tag Rule",
                "operationId": "d5e9eccac31818f19677a3562c6d547b",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_survey_id"
                    },
                    {
                        "$ref": "#/components/parameters/tag_rule_filter"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_tag_rule_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_tag_rule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/tag_rule": {
            "get": {
                "tags": [
                    "Tag Rule"
                ],
                "summary": "Fetch Tag Rules",
                "operationId": "978217d2da037e0a628f618ed76f49c3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/tag_rule_filter"
                    },
                    {
                        "$ref": "#/components/parameters/tag_rule_sort"
                    },
                    {
                        "$ref": "#/components/parameters/tag_rule_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_tag_rule"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tag Rule"
                ],
                "summary": "Create a Tag Rule",
                "operationId": "94c2eafeff0caab345434ed11aac71aa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_tag_rule_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_tag_rule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/district": {
            "get": {
                "tags": [
                    "Filter"
                ],
                "summary": "Fetch Districts",
                "description": "Pagination is disabled for this endpoint",
                "operationId": "662c9f42c903fc76282d160d0950f649",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_district_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_district"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/survey/{survey_id}/submission": {
            "get": {
                "tags": [
                    "Submission"
                ],
                "summary": "Fetch Submissions of Survey",
                "operationId": "b64eb1922395cdc01bdb64347cc90c66",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_survey_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_submission_include"
                    },
                    {
                        "$ref": "#/components/parameters/polling_submission_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_survey_submission"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/submission/{submission_id}": {
            "get": {
                "tags": [
                    "Submission"
                ],
                "summary": "Get Submission",
                "operationId": "f1bf7583b2c7b0fa7324feec56895221",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_submission_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_submission_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_survey_submission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/flag/message_processing": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get Message Processing Flag",
                "description": "Message processing is paused if this flag is set to `1`, not paused if this is flag is set to `0`",
                "operationId": "fb659f4b57e9f83687d2318382fbc3c9",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "enum": [
                                                        "halt_message_processing"
                                                    ]
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "flag"
                                                    ]
                                                },
                                                "attributes": {
                                                    "properties": {
                                                        "status": {
                                                            "description": "`0 = Paused`, `1 = Resumed`",
                                                            "type": "integer",
                                                            "enum": [
                                                                "0",
                                                                "1"
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/csbm": {
            "get": {
                "tags": [
                    "Filter"
                ],
                "summary": "Fetch CSBM",
                "description": "Pagination is disabled for this endpoint",
                "operationId": "a85e536311fa0b78684769c48c5fba99",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_csbm_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_csbm"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/citizen/filter": {
            "post": {
                "tags": [
                    "Citizen"
                ],
                "summary": "Filter Citizens",
                "description": "Either 'filter' or 'filter_template_id' body parameter must be provided",
                "operationId": "46ba3dcc63e5ea02c8fa6c6f7e753a47",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/citizen_filter_post_body"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_citizen"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/citizen/export": {
            "post": {
                "tags": [
                    "Citizen"
                ],
                "summary": "Export Citizens",
                "description": "Either 'filter' or 'filter_template_id' body parameter must be provided",
                "operationId": "bc5eb055f335a635c8ffb9dc1b2ac657",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/citizen_filter_post_body"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "uri": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message": {
            "post": {
                "tags": [
                    "DirectMessage"
                ],
                "summary": "Send a Direct Message",
                "description": "Returns 200 if only one citizen id is provided, 204 if an array of citizen ids are provided",
                "operationId": "04411b3ee6491b49b811796511038d20",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_direct_message_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/polling/polling/demo_message": {
            "post": {
                "tags": [
                    "DemoMessage"
                ],
                "summary": "Send a Demo Message",
                "description": "Sends the message to the currently logged in personnel",
                "operationId": "4f6150de8ad44b26c913ce8cd4000e54",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_demo_message_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/polling/polling/citizen/{citizen_id}/tag/{tag_value}": {
            "post": {
                "tags": [
                    "Tag (Citizen)"
                ],
                "summary": "Tag Citizen",
                "description": "Tag will be automatically created if not found",
                "operationId": "04856655b4f7e3760ed6e2fbfb1a9b51",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_id"
                    },
                    {
                        "parameter": "tag_value",
                        "name": "tag_value",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/polling/polling/citizen/tag/move": {
            "post": {
                "tags": [
                    "Tag (Citizen)"
                ],
                "summary": "Move Citizens to Tag",
                "description": "This operation can take a long time depending on the number of citizens filtered. Took ~20 seconds to assign 2 different tags to 1000 citizens in local environment",
                "operationId": "741091b03fb8ee7fcc3f1643932cedff",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/polling_citizen_tag_move_post_body"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/polling/polling/flag/pause": {
            "patch": {
                "tags": [
                    "Message"
                ],
                "summary": "Halt Message Processing",
                "description": "All message sending operations will be paused after this endpoint is invoked",
                "operationId": "309e82d5416a05aabe74febf6c09f82d",
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/polling/polling/flag/resume": {
            "patch": {
                "tags": [
                    "Message"
                ],
                "summary": "Resume Message Processing",
                "description": "All message sending operations will be resumed after this endpoint is invoked",
                "operationId": "1bd66d2f9687ec220db549cc56fd4284",
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/polling/polling/category/{category_id}": {
            "delete": {
                "tags": [
                    "Category (Citizen)"
                ],
                "summary": "Remove Category",
                "description": "Moves member tags into default category",
                "operationId": "58b51e10ad997204bd3b4298ef43248d",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_category_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/polling/polling/citizen/{citizen_id}/tag/{tag_id}": {
            "delete": {
                "tags": [
                    "Tag (Citizen)"
                ],
                "summary": "Untag Citizen",
                "operationId": "f97d745640991e2614c310bf9c933815",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_citizen_tag_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/polling/survey": {
            "get": {
                "tags": [
                    "Submission (Public)"
                ],
                "summary": "Get Survey Form Data",
                "description": "A token can only be used once to get the form data",
                "operationId": "acbb10c85b0330072ea27bdab83909c7",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_submission_token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_form"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Submission (Public)"
                ],
                "summary": "Submit Survey Response",
                "operationId": "02a508d4209bfab856f64e5b8578c5cb",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_submission_token"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_submission_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "authorization": {
                "type": "string"
            },
            "error": {
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "errors": {
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                },
                "type": "object"
            },
            "personnel_basic": {
                "title": "Personnel Basic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "image_uri": {
                                "nullable": true,
                                "type": "string",
                                "format": "uri"
                            },
                            "firstname": {
                                "type": "string"
                            },
                            "lastname": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "citizen": {
                "title": "Citizen",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "tcno": {
                                "type": "string",
                                "maxLength": 11,
                                "minLength": 11
                            },
                            "firstname": {
                                "nullable": true,
                                "type": "string"
                            },
                            "lastname": {
                                "nullable": true,
                                "type": "string"
                            },
                            "gender": {
                                "nullable": true,
                                "description": "`1 = Female`, `2 = Male`",
                                "type": "integer"
                            },
                            "address": {
                                "nullable": true,
                                "type": "string"
                            },
                            "phone": {
                                "nullable": true,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "corporation": {
                "title": "Corporation",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "tax_number": {
                                "type": "string",
                                "maxLength": 11,
                                "minLength": 10
                            },
                            "tax_office": {
                                "nullable": true,
                                "type": "string"
                            },
                            "title": {
                                "nullable": true,
                                "type": "string"
                            },
                            "address": {
                                "nullable": true,
                                "type": "string"
                            },
                            "phone": {
                                "nullable": true,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "feature_type": {
                "type": "string",
                "enum": [
                    "parcel",
                    "structure",
                    "numbering",
                    "district",
                    "road",
                    "poi",
                    "custom"
                ]
            },
            "department": {
                "title": "Department",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "parent_department": {
                                "nullable": true,
                                "type": "string"
                            },
                            "director": {
                                "nullable": true,
                                "type": "string"
                            },
                            "director_allowed_parent_depth": {
                                "type": "integer"
                            },
                            "director_allowed_child_depth": {
                                "type": "integer"
                            },
                            "member_allowed_parent_depth": {
                                "type": "integer"
                            },
                            "member_allowed_child_depth": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "director": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "comment_request_body": {
                "title": "Comment",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "department_basic": {
                "title": "Department",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "task": {
                "title": "Task",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "assigner": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "nullable": true,
                                "type": "string"
                            },
                            "start_date": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "due_date": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "location": {
                                "nullable": true,
                                "properties": {
                                    "latitude": {
                                        "type": "string",
                                        "maximum": "90",
                                        "minimum": "-90"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "maximum": "180",
                                        "minimum": "-180"
                                    }
                                },
                                "type": "object"
                            },
                            "priority": {
                                "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "status": {
                                "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "subtask": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/subtask"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "assignee": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "subtask": {
                "title": "Subtask",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "assigner": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "nullable": true,
                                "type": "string"
                            },
                            "due_date": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "location": {
                                "nullable": true,
                                "properties": {
                                    "latitude": {
                                        "type": "string",
                                        "maximum": "90",
                                        "minimum": "-90"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "maximum": "180",
                                        "minimum": "-180"
                                    }
                                },
                                "type": "object"
                            },
                            "priority": {
                                "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "status": {
                                "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "assignee": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "comment": {
                "title": "Comment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "commented_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "commentator": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "event": {
                "title": "Event",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "type": {
                                "description": "`StatusChanged = 1`, `TitleChanged = 2`, `Assigned = 3`, `Deassigned = 4`, `DescriptionUpdated = 5`, `DueDateChanged = 6`, `SubtaskCreated = 7`, `SubtaskRemoved = 8`, `PriorityChanged = 10`, `LocationChanged = 11`, `AttachmentAttached = 12`, `AttachmentRemoved = 13`, `StartDateChanged = 14`",
                                "type": "integer",
                                "maximum": 14,
                                "minimum": 1
                            },
                            "occurred_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "data": {
                                "description": "\n * \t\t\t\t\tDepending on the event type, this object will contain following properties: \n * \t\t\t\t\t`type == 1` => `{ status_old: int, status_new: int }`,\n * \t\t\t\t\t`type == 2` => `{ title_old: string, title_new: string }`,\n * \t\t\t\t\t`type == 3` => `{ assignee: int }`,\n * \t\t\t\t\t`type == 4` => `{ assignee: int }`,\n * \t\t\t\t\t`type == 5` => `{ description: string }`,\n * \t\t\t\t\t`type == 6` => `{ due_date_old: string(datetime), due_date_new: string(datetime) }`,\n * \t\t\t\t\t`type == 7` => `{ title: string }`,\n * \t\t\t\t\t`type == 8` => `{ title: string }`,\n * \t\t\t\t\t`type == 10` => `{ priority_old: int, priority_new: int }`,\n * \t\t\t\t\t`type == 11` => `{ location: { latitude: string, longitude: string } }`,\n * \t\t\t\t\t`type == 12` => `{ name: string }`,\n * \t\t\t\t\t`type == 13` => `{ name: string }`,\n * \t\t\t\t\t`type == 14` => `{ start_date_old: string(datetime), start_date_new: string(datetime) }`\n * \t\t\t\t",
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "enabler": {
                                "nullable": true,
                                "description": "NULL if event was triggered by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "attachment": {
                "title": "attachment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "extension": {
                                "nullable": true,
                                "type": "string"
                            },
                            "uri": {
                                "description": "Direct access URI",
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "uploader": {
                                "nullable": "true",
                                "description": "NULL if attachment was added by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "procedure_type": {
                "description": "\n * \t\t\t`(Numarataj) Numbering = 1`\n *\t\t\t`(Yapı Ruhsatı) BuildingPermit = 2`\n *\t\t\t`(İnşaat İstikamet Rölevesi) ConstructionDirectionSurveying = 3`\n *\t\t\t`(Kot Kesit Rölevesi) ElevationProfileSurveying = 4`\n *\t\t\t`(Yola Terk) Expropriation = 5`\n *\t\t\t`(İfraz) Parcelling = 6`\n *\t\t\t`(Tevhit) Amalgamation = 7`\n *\t\t\t`(Ecrimisil) OccupationCompensationByManagement = 8`\n *\t\t\t`(Ecrimisil - Vatandaş) OccupationCompensationByCitizen = 9`\n *\t\t\t`(1/5000 Ölçekli Plan Değişimi) PlanChange1to5000Internal = 10`\n *\t\t\t`(1/5000 Ölçekli Plan Değişimi - Vatandaş) PlanChange1to5000External = 11`\n *\t\t\t`(Yıkım Ruhsatı) DeconstructionPermit = 12`\n *\t\t\t`(Avan Proje) PreliminaryDesign = 13`\n *\t\t\t`(Yazılı İmar Durumu) WrittenZoningStatus = 14`\n *\t\t\t`Riskli Yapı = 15`\n *\t\t\t`Kira Yardımı (Mal Sahibi) = 16`\n *\t\t\t`Kira Yardımı (Kiracı) = 17`\n *\t\t\t`Test = 18`",
                "type": "integer"
            },
            "polling_citizen_category_post_body": {
                "title": "Category",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "color": {
                        "$ref": "#/components/schemas/polling_citizen_tag_color"
                    },
                    "parent_id": {
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "polling_citizen_category_patch_body": {
                "title": "Category",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "color": {
                        "$ref": "#/components/schemas/polling_citizen_tag_color"
                    },
                    "parent_id": {
                        "nullable": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "polling_tag_category": {
                "title": "Category",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "category"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string",
                                "pattern": "[a-zA-Z0-9 ]+"
                            },
                            "color": {
                                "$ref": "#/components/schemas/polling_citizen_tag_color"
                            },
                            "parent_id": {
                                "type": "string"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "datetime"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "tag": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_citizen_tag"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "category": {
                                "description": "parent category",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_tag_category"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_citizen_gender": {
                "title": "Cinsiyet",
                "description": "`1 = Erkek`, `2 = Kadın`",
                "type": "integer",
                "enum": [
                    "1",
                    "2"
                ]
            },
            "polling_citizen": {
                "title": "Citizen (Polling)",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "polling_citizen"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "kimlik_no": {
                                "type": "string"
                            },
                            "medeni_hal": {
                                "nullable": true,
                                "description": "`0 = NULL`, `1 = Bekar`, `2 = Evli`, `3 = Boşanmış`, `4 = Dul`, `5 = Evliliğin Feshi`, `6 = Evliliğin İptali`",
                                "type": "integer",
                                "enum": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6
                                ]
                            },
                            "durum": {
                                "nullable": true,
                                "description": "`0 = NULL`, `1 = Açık`, `3 = Ölüm`, `4 = Gaip`, `5 = Vatandaşlıktan Çıkma`, `6 = İkamet Süresi Bitti`",
                                "type": "integer",
                                "enum": [
                                    0,
                                    1,
                                    3,
                                    4,
                                    5,
                                    6
                                ]
                            },
                            "olum_tarih": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "kayit_aile_sira_no": {
                                "nullable": true,
                                "type": "integer"
                            },
                            "kayit_birey_sira_no": {
                                "nullable": true,
                                "type": "integer"
                            },
                            "kayit_cilt": {
                                "nullable": true,
                                "description": "cilt kodu",
                                "type": "integer"
                            },
                            "kayit_il": {
                                "nullable": true,
                                "description": "il kodu",
                                "type": "integer"
                            },
                            "kayit_ilce": {
                                "nullable": true,
                                "description": "ilce kodu",
                                "type": "integer"
                            },
                            "ad": {
                                "nullable": true,
                                "type": "string"
                            },
                            "soyad": {
                                "nullable": true,
                                "type": "string"
                            },
                            "telefon": {
                                "nullable": true,
                                "type": "string"
                            },
                            "anne_ad": {
                                "nullable": true,
                                "type": "string"
                            },
                            "baba_ad": {
                                "nullable": true,
                                "type": "string"
                            },
                            "cinsiyet": {
                                "nullable": true,
                                "description": "cinsiyet kodu",
                                "type": "integer"
                            },
                            "dogum_tarih": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "dogum_yer": {
                                "nullable": true,
                                "type": "string"
                            },
                            "cuzdan_kayit_no": {
                                "nullable": true,
                                "type": "integer"
                            },
                            "cuzdan_no": {
                                "nullable": true,
                                "type": "integer"
                            },
                            "cuzdan_seri": {
                                "nullable": true,
                                "type": "string"
                            },
                            "tckk_seri_no": {
                                "nullable": true,
                                "type": "string"
                            },
                            "adres_no": {
                                "nullable": true,
                                "type": "integer"
                            },
                            "acik_adres": {
                                "nullable": true,
                                "type": "string"
                            },
                            "mahalle_kodu": {
                                "nullable": true,
                                "type": "integer"
                            },
                            "csbm_kodu": {
                                "nullable": true,
                                "type": "integer"
                            },
                            "bina_no": {
                                "nullable": true,
                                "type": "integer"
                            },
                            "ada": {
                                "nullable": true,
                                "type": "string"
                            },
                            "parsel": {
                                "nullable": true,
                                "type": "string"
                            },
                            "dis_kapi_no": {
                                "nullable": true,
                                "type": "string"
                            },
                            "ic_kapi_no": {
                                "nullable": true,
                                "type": "string"
                            },
                            "yabanci": {
                                "description": "`0 = Not foreign`, `1 = Is foreign`",
                                "type": "integer",
                                "enum": [
                                    0,
                                    1
                                ]
                            },
                            "bitis_tarihi_belirsiz_olma_neden": {
                                "nullable": true,
                                "description": "`1 = Süresiz`",
                                "type": "integer",
                                "enum": [
                                    1
                                ]
                            },
                            "izin_baslangic_tarih": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "izin_bitis_tarih": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "izin_duzenlenen_il": {
                                "nullable": true,
                                "description": "il kodu",
                                "type": "integer"
                            },
                            "kaynak_birim": {
                                "nullable": true,
                                "description": "`1 = Emniyet Genel Müdürlüğü`, `10 = Göç İdaresi Genel Müdürlüğü`",
                                "type": "integer",
                                "enum": [
                                    1,
                                    10
                                ]
                            },
                            "kazanilan_tc_kimlik_no": {
                                "nullable": true,
                                "type": "string"
                            },
                            "uyruk": {
                                "nullable": true,
                                "description": "uyruk kodu",
                                "type": "integer"
                            },
                            "cinsiyet_str": {
                                "nullable": true,
                                "description": "`1 = Erkek`, `2 = Kadın`",
                                "type": "string",
                                "enum": [
                                    "1",
                                    "2"
                                ]
                            },
                            "medeni_hal_str": {
                                "nullable": true,
                                "description": "`0 = NULL`, `1 = Bekar`, `2 = Evli`, `3 = Boşanmış`, `4 = Dul`, `5 = Evliliğin Feshi`, `6 = Evliliğin İptali`",
                                "type": "string",
                                "enum": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6
                                ]
                            },
                            "kayit_cilt_str": {
                                "nullable": true,
                                "description": "cilt kodu",
                                "type": "string"
                            },
                            "kayit_il_str": {
                                "nullable": true,
                                "description": "il kodu",
                                "type": "string"
                            },
                            "kayit_ilce_str": {
                                "nullable": true,
                                "description": "ilce kodu",
                                "type": "string"
                            },
                            "durum_str": {
                                "nullable": true,
                                "description": "`0 = NULL`, `1 = Açık`, `3 = Ölüm`, `4 = Gaip`, `5 = Vatandaşlıktan Çıkma`, `6 = İkamet Süresi Bitti`",
                                "type": "string",
                                "enum": [
                                    0,
                                    1,
                                    3,
                                    4,
                                    5,
                                    6
                                ]
                            },
                            "yabanci_str": {
                                "nullable": true,
                                "description": "`0 = Not foreign`, `1 = Is foreign`",
                                "type": "string",
                                "enum": [
                                    0,
                                    1
                                ]
                            },
                            "bitis_tarihi_belirsiz_olma_neden_str": {
                                "nullable": true,
                                "description": "`1 = Süresiz`",
                                "type": "string",
                                "enum": [
                                    1
                                ]
                            },
                            "kaynak_birim_str": {
                                "nullable": true,
                                "description": "`1 = Emniyet Genel Müdürlüğü`, `10 = Göç İdaresi Genel Müdürlüğü`",
                                "type": "string",
                                "enum": [
                                    1,
                                    10
                                ]
                            },
                            "izin_duzenlenen_il_str": {
                                "nullable": true,
                                "description": "il kodu",
                                "type": "string"
                            },
                            "uyruk_str": {
                                "nullable": true,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "message": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_message"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "tag": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_citizen_tag"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "survey": {
                                "description": "Surveys assigned to this citizen. See field `Meta.status` to better understand how this relation is useful",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_survey"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "submission": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_survey_submission"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "location": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "longitude": {
                                                "type": "string"
                                            },
                                            "latitude": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_csbm": {
                "title": "CSBM",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "csbm"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "ad": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "district": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/polling_district"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_demo_message_post_body": {
                "title": "DemoMessage",
                "type": "object",
                "oneOf": [
                    {
                        "property": "custom_message",
                        "description": "send a custom message",
                        "properties": {
                            "message": {
                                "description": "send a custom message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "templated_message",
                        "description": "send a templated message",
                        "properties": {
                            "template_id": {
                                "description": "send a templated message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "polling_direct_message_post_body": {
                "title": "DirectMessage",
                "type": "object",
                "oneOf": [
                    {
                        "property": "custom_message",
                        "description": "send a custom message",
                        "properties": {
                            "citizen_id": {
                                "oneOf": [
                                    {
                                        "property": null,
                                        "description": "single citizen_id",
                                        "type": "string"
                                    },
                                    {
                                        "property": null,
                                        "description": "array of citizen_id",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            },
                            "message": {
                                "description": "send a custom message",
                                "type": "string"
                            },
                            "survey_id": {
                                "description": "attach a survey to this message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "templated_message",
                        "description": "send a templated message",
                        "properties": {
                            "citizen_id": {
                                "oneOf": [
                                    {
                                        "property": null,
                                        "description": "single citizen_id",
                                        "type": "string"
                                    },
                                    {
                                        "property": null,
                                        "description": "array of citizen_id",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                ]
                            },
                            "template_id": {
                                "description": "send a templated message",
                                "type": "string"
                            },
                            "survey_id": {
                                "description": "attach a survey to this message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "polling_pending_direct_message": {
                "title": "Message",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "content": {
                                "type": "string"
                            },
                            "status": {
                                "description": "always 1 (`Pending`)",
                                "type": "integer"
                            },
                            "processed_on": {
                                "nullable": true,
                                "description": "always null",
                                "type": "string",
                                "format": "date-time"
                            },
                            "status_str": {
                                "description": "human readable status description",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_failed_direct_message": {
                "title": "Message",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "content": {
                                "type": "string"
                            },
                            "status": {
                                "description": "always 3 (`Failed`)",
                                "type": "integer"
                            },
                            "processed_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status_str": {
                                "description": "human readable status description",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "message_error": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_message_error"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_district": {
                "title": "District",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "district"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "ad": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "csbm": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_csbm"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_filter": {
                "title": "Filter",
                "description": "Filter JSON. Use '/polling/polling/filter/options' endpoint for supported properties, operators and values. Valid patterns for filter fields are as follows:\n\t\n\tproperty: [a-zA-Z_]+\n\toperator: [a-zA-Z]+\n\tvalue: [a-zA-Z0-9-.,\\/\\\\ ]+\n\n * \t\tExample JSON:\n\n\n\t{\n\t\t'type': 'parentFilter',\n\t\t'uId': '6d6940fd-ba38-425a-b306-e14643e659b3',\n\t\t'children': [\n\t\t\t{\n\t\t\t\t'type': 'filter',\n\t\t\t\t'filter': {\n\t\t\t\t'property': 'yas',\n\t\t\t\t'operator': 'gt',\n\t\t\t\t'value': '80'\n\t\t\t\t},\n\t\t\t\t'uId': '798eeb98-4e1a-4858-acbd-195a1b4c2864',\n\t\t\t\t'children': [\n\t\t\t\t{\n\t\t\t\t\t'type': 'connector',\n\t\t\t\t\t'connector': {\n\t\t\t\t\t'connector_value': 'or'\n\t\t\t\t\t},\n\t\t\t\t\t'uId': '9d7d0b3a-98e9-4bb7-b530-f3e6d3b12723',\n\t\t\t\t\t'children': []\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'filter',\n\t\t\t\t\t'filter': {\n\t\t\t\t\t'property': 'cinsiyet',\n\t\t\t\t\t'operator': 'eq',\n\t\t\t\t\t'value': '1'\n\t\t\t\t\t},\n\t\t\t\t\t'uId': 'fcece92a-576e-45df-b73f-023d21b4be93',\n\t\t\t\t\t'children': []\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'type': 'connector',\n\t\t\t\t'connector': {\n\t\t\t\t'connector_value': 'or'\n\t\t\t\t},\n\t\t\t\t'uId': 'dc0251e9-6aa1-4c2a-984e-ae3e6879fb25',\n\t\t\t\t'children': []\n\t\t\t},\n\t\t\t{\n\t\t\t\t'type': 'filter',\n\t\t\t\t'filter': {\n\t\t\t\t'property': 'yas',\n\t\t\t\t'operator': 'eq',\n\t\t\t\t'value': '75'\n\t\t\t\t},\n\t\t\t\t'uId': '852c0dee-49a3-4345-808a-ec1492072def',\n\t\t\t\t'children': [\n\t\t\t\t{\n\t\t\t\t\t'type': 'connector',\n\t\t\t\t\t'connector': {\n\t\t\t\t\t'connector_value': 'or'\n\t\t\t\t\t},\n\t\t\t\t\t'uId': '9da1fcde-7a70-4930-bc23-ce00a863788b',\n\t\t\t\t\t'children': []\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'filter',\n\t\t\t\t\t'filter': {\n\t\t\t\t\t'property': 'cinsiyet',\n\t\t\t\t\t'operator': 'eq',\n\t\t\t\t\t'value': '2'\n\t\t\t\t\t},\n\t\t\t\t\t'uId': 'd4a0b6a4-fb68-4cb1-95a2-79f5a259a4f0',\n\t\t\t\t\t'children': []\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n\n\n * ",
                "type": "object"
            },
            "citizen_filter_post_body": {
                "title": "Filter",
                "type": "object",
                "oneOf": [
                    {
                        "property": "custom_filter",
                        "description": "filter citizens using a custom filter",
                        "properties": {
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "custom_message_templated_filter",
                        "description": "filter citizens using a templated filter",
                        "properties": {
                            "filter_template_id": {
                                "description": "use a templated filter",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "polling_filter_template_post_body": {
                "title": "FilterTemplate",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/polling_filter"
                    }
                },
                "type": "object"
            },
            "polling_filter_template": {
                "title": "FilterTemplate",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "filter_template"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_used_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_form": {
                "title": "Form",
                "description": "Form may have properties other than `attributes` (ex: name, description, theme). `attributes` is the only property that is used by the API. Rest is stored for front-end but not actually used.\n * \t\n\n\tExample form:\n     \n\t\t{\n\t\t\t'name': 'Form adı...',\n\t\t\t'description': 'Form açıklaması...',\n\t\t\t'logo': '90as0dkak0kdk', // (Get image id from endpoint '/file/upload')\n\t\t\t'logo_uri': 'https://api.gungoren.bel.tr/v1/file?token=alksdmlakdm' // returns with the response, don't add to body while creating a survey\n\t\t\t'theme': {\n\t\t\t\t'bgColor': 'ffffff',\n\t\t\t\t'textColor': '555555',\n\t\t\t\t'bannerImage': ''\n\t\t\t},\n\t\t\t'attributes': [\n\t\t\t\t{\n\t\t\t\t\t'type': 'text',\n\t\t\t\t\t'icon': 'text_fields',\n\t\t\t\t\t'label': 'Adı Soyadı',\n\t\t\t\t\t'description': 'Adınızı giriniz',\n\t\t\t\t\t'placeholder': 'Adınızı giriniz',\n\t\t\t\t\t'className': 'form-control',\n\t\t\t\t\t'subtype': 'text',\n\t\t\t\t\t'regex': '',\n\t\t\t\t\t'handle': true,\n\t\t\t\t\t'name': 'text-1627285189778',\n\t\t\t\t\t'toggle': false,\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'value': 'Kant Yazılım'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'email',\n\t\t\t\t\t'icon': 'email',\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'label': 'E-posta',\n\t\t\t\t\t'description': 'E-postanızı giriniz',\n\t\t\t\t\t'placeholder': 'E-postanızı giriniz',\n\t\t\t\t\t'className': 'form-control',\n\t\t\t\t\t'subtype': 'text',\n\t\t\t\t\t'regex': '^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+).([a-zA-Z]{2,5})$',\n\t\t\t\t\t'errorText': 'Lütfen geçerli eposta adresini giriniz',\n\t\t\t\t\t'handle': true,\n\t\t\t\t\t'name': 'email-1627285202201',\n\t\t\t\t\t'toggle': false,\n\t\t\t\t\t'value': 'kant@info'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'phone',\n\t\t\t\t\t'icon': 'phone',\n\t\t\t\t\t'label': 'Telefon',\n\t\t\t\t\t'description': 'Telefonunuzu girin',\n\t\t\t\t\t'placeholder': 'Telefonunuzu girin',\n\t\t\t\t\t'className': 'form-control',\n\t\t\t\t\t'subtype': 'text',\n\t\t\t\t\t'regex': '^[+]?[(]?[0-9]{3}[)]?[-s.]?[0-9]{3}[-s.]?[0-9]{4,6}$',\n\t\t\t\t\t'errorText': 'Geçerli bir telefon numarası giriniz',\n\t\t\t\t\t'handle': true,\n\t\t\t\t\t'name': 'phone-1627285209926',\n\t\t\t\t\t'toggle': false,\n\t\t\t\t\t'value': '33333333333333'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'number',\n\t\t\t\t\t'label': 'Yaş',\n\t\t\t\t\t'icon': 'format_list_numbered',\n\t\t\t\t\t'description': 'Yaş',\n\t\t\t\t\t'placeholder': 'Yaşınızı girin',\n\t\t\t\t\t'className': 'form-control',\n\t\t\t\t\t'value': '20',\n\t\t\t\t\t'min': 12,\n\t\t\t\t\t'max': 90,\n\t\t\t\t\t'name': 'number-1627285236864',\n\t\t\t\t\t'toggle': false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'date',\n\t\t\t\t\t'icon': 'calendar_today',\n\t\t\t\t\t'label': 'Tarih',\n\t\t\t\t\t'placeholder': 'Tarih',\n\t\t\t\t\t'className': 'form-control',\n\t\t\t\t\t'name': 'date-1627285248661',\n\t\t\t\t\t'toggle': false,\n\t\t\t\t\t'value': '2021-07-26'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'time',\n\t\t\t\t\t'icon': 'timer',\n\t\t\t\t\t'label': 'Saat',\n\t\t\t\t\t'placeholder': 'Tarih & Saat',\n\t\t\t\t\t'className': 'form-control',\n\t\t\t\t\t'name': 'time-1627285259055',\n\t\t\t\t\t'toggle': false,\n\t\t\t\t\t'value': '2021-07-26T10:43'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'textarea',\n\t\t\t\t\t'icon': 'text_rotation_none',\n\t\t\t\t\t'label': 'Metin Alanı',\n\t\t\t\t\t'name': 'textarea-1627285267206',\n\t\t\t\t\t'toggle': false,\n\t\t\t\t\t'placeholder': 'Mesajınızı yazınız....',\n\t\t\t\t\t'value': 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Non, est.\\nLorem ipsum dolor sit amet consectetur adipisicing elit. Non, est.\\nLorem ipsum dolor sit amet consectetur adipisicing elit. Non, est.'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'paragraph',\n\t\t\t\t\t'icon': 'textsms',\n\t\t\t\t\t'label': 'Paragraf',\n\t\t\t\t\t'placeholder': 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Non, est.',\n\t\t\t\t\t'name': 'paragraph-1627285286243',\n\t\t\t\t\t'toggle': false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'checkbox',\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'label': 'Çoklu Seçim',\n\t\t\t\t\t'icon': 'check_box',\n\t\t\t\t\t'description': 'Checkbox',\n\t\t\t\t\t'inline': true,\n\t\t\t\t\t'values': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 1',\n\t\t\t\t\t\t'value': 'secim-1',\n\t\t\t\t\t\t'selected': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 2',\n\t\t\t\t\t\t'value': 'secim-2'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 3',\n\t\t\t\t\t\t'value': 'secim-3',\n\t\t\t\t\t\t'selected': true\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'name': 'checkbox-1627285306096',\n\t\t\t\t\t'toggle': false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'radio',\n\t\t\t\t\t'icon': 'radio_button_checked',\n\t\t\t\t\t'label': 'Tekli Seçim',\n\t\t\t\t\t'description': 'Radio boxes',\n\t\t\t\t\t'values': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 1',\n\t\t\t\t\t\t'value': 'secim-1'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 2',\n\t\t\t\t\t\t'value': 'secim-2'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 3',\n\t\t\t\t\t\t'value': 'secim-3'\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'name': 'radio-1627285333878',\n\t\t\t\t\t'toggle': false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'autocomplete',\n\t\t\t\t\t'icon': 'select_all',\n\t\t\t\t\t'label': 'Seçme',\n\t\t\t\t\t'description': 'Select',\n\t\t\t\t\t'placeholder': 'Seçme',\n\t\t\t\t\t'className': 'form-control',\n\t\t\t\t\t'values': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 1',\n\t\t\t\t\t\t'value': 'secim-1'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 2',\n\t\t\t\t\t\t'value': 'secim-2'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'Seçim 3',\n\t\t\t\t\t\t'value': 'secim-3'\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'name': 'autocomplete-1627285377619',\n\t\t\t\t\t'toggle': false,\n\t\t\t\t\t'required': true,\n\t\t\t\t\t'value': 'secim-2'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'file',\n\t\t\t\t\t'icon': 'attach_file',\n\t\t\t\t\t'label': 'Dosya',\n\t\t\t\t\t'className': 'form-control',\n\t\t\t\t\t'subtype': 'file',\n\t\t\t\t\t'name': 'file-1627285389839',\n\t\t\t\t\t'value': 'C:\\\\fakepath\\\\kace-rodriguez-p3OzJuT_Dks-unsplash.jpg'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'type': 'img-select',\n\t\t\t\t\t'icon': 'radio_button_checked',\n\t\t\t\t\t'label': 'Resim Seçme',\n\t\t\t\t\t'description': 'Resim Seçim',\n\t\t\t\t\t'values': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': '786asd6ad78ad', // (Get image id from endpoint '/file/upload')\n\t\t\t\t\t\t'value': 'secim-1',\n\t\t\t\t\t\t'resource': 'https://api.gungoren.bel.tr/v1/file?token=asdjaoijdad' // returns with the response, don't add to body while creating a survey\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': 'asdyay898as98', // (Get image id from endpoint '/file/upload')\n\t\t\t\t\t\t'value': 'secim-2',\n\t\t\t\t\t\t'resource': 'https://api.gungoren.bel.tr/v1/file?token=qqoweqhuhqeiuwh' // returns with the response, don't add to body while creating a survey\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t'label': '98adsu9a89duj', // (Get image id from endpoint '/file/upload')\n\t\t\t\t\t\t'value': 'secim-3',\n\t\t\t\t\t\t'resource': 'https://api.gungoren.bel.tr/v1/file?token=aosijda9dja9jda' // returns with the response, don't add to body while creating a survey\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t'name': 'img-select-1627285333878',\n\t\t\t\t\t'toggle': false\n\t\t\t\t}\n\t\t\t]\n\t\t}",
                "properties": {
                    "logo": {
                        "description": "Omittable. Unique id generated by the server. Get image_id from endpoint /file/upload if file is just being uploaded. Do not modify this value if survey is being updated and the file should remain as is",
                        "type": "string"
                    },
                    "logo_uri": {
                        "description": "URI for image. Available when a survey is queried and if the survey has a logo. Omit this property while creating a survey",
                        "type": "string",
                        "format": "uri"
                    },
                    "attributes": {
                        "description": "Attributes may have more properties than listed below. Properties listed here are used by the API, rest is stored for front-end but not actually used",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/polling_form_attribute"
                        }
                    }
                },
                "type": "object"
            },
            "polling_form_attribute": {
                "title": "Attribute",
                "description": "May have more properties that are related to styling-front end",
                "type": "object",
                "oneOf": [
                    {
                        "property": "form_attribute_type_1",
                        "properties": {
                            "type": {
                                "description": "type of the input field",
                                "type": "string",
                                "enum": [
                                    "text",
                                    "email",
                                    "phone",
                                    "number",
                                    "date",
                                    "time",
                                    "textarea",
                                    "paragraph",
                                    "file"
                                ]
                            },
                            "name": {
                                "description": "unique identifier. must be unique among other attributes",
                                "type": "string"
                            },
                            "required": {
                                "description": "attribute must have a valid `value` if this property is set to `true`",
                                "type": "boolean"
                            },
                            "value": {
                                "description": "type must be a string or a number"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "form_attribute_type_2",
                        "properties": {
                            "type": {
                                "description": "type of the input field",
                                "type": "string",
                                "enum": [
                                    "radio",
                                    "autocomplete"
                                ]
                            },
                            "name": {
                                "description": "unique identifier. must be unique among other attributes",
                                "type": "string"
                            },
                            "required": {
                                "description": "attribute must have a valid `value` if this property is set to `true`",
                                "type": "boolean"
                            },
                            "values": {
                                "description": "valid field values",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "label": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "value": {
                                "description": "type must be a string or a number, value must be present in `values` property"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "form_attribute_type_3",
                        "properties": {
                            "type": {
                                "description": "type of the input field",
                                "type": "string",
                                "enum": [
                                    "checkbox"
                                ]
                            },
                            "name": {
                                "description": "unique identifier. must be unique among other attributes",
                                "type": "string"
                            },
                            "required": {
                                "description": "at least one item in property `values` must have it's `selected` property to `true`",
                                "type": "boolean"
                            },
                            "values": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "label": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        },
                                        "selected": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "form_attribute_type_4",
                        "properties": {
                            "type": {
                                "description": "type of the input field",
                                "type": "string",
                                "enum": [
                                    "img-select"
                                ]
                            },
                            "name": {
                                "description": "unique identifier. must be unique among other attributes",
                                "type": "string"
                            },
                            "required": {
                                "description": "attribute must have a valid `value` if this property is set to `true`",
                                "type": "boolean"
                            },
                            "values": {
                                "description": "valid field values",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "label": {
                                            "description": "Unique id generated by the server. Get image_id from endpoint /file/upload if file is just being uploaded. Do not modify this value if survey is being updated and the file should remain as is",
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        },
                                        "resource": {
                                            "description": "URI for image/video. Available when a survey is queried. Omit this property while creating a survey",
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "value": {
                                "description": "type must be a string or a number, value must be present in `values` property"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "polling_message_status": {
                "title": "Status",
                "description": "`1 = Pending`, `2 = Successful`, `3 = Failed`",
                "type": "integer",
                "enum": [
                    1,
                    2,
                    3
                ]
            },
            "polling_message": {
                "title": "Message",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "content": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#/components/schemas/polling_message_status"
                            },
                            "processed_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status_str": {
                                "description": "human readable status description",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "queue": {
                                "nullable": true,
                                "description": "null if message is not associated with any queue (a direct message)",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/polling_queue"
                                    }
                                },
                                "type": "object"
                            },
                            "message_error": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_message_error"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_message_error": {
                "title": "MessageError",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "message_error"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "error": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_message_template_post_body": {
                "title": "MessageTemplate",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "polling_message_template": {
                "title": "MessageTemplate",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message_template"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_used_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_queue_is_paused": {
                "description": "`0 = Not Paused`, `1 = Paused`",
                "type": "integer",
                "enum": [
                    0,
                    1
                ]
            },
            "polling_queue_is_complete": {
                "description": "`0 = Not Complete`, `1 = Complete`",
                "type": "integer",
                "enum": [
                    0,
                    1
                ]
            },
            "polling_queue_post_body": {
                "title": "Queue",
                "type": "object",
                "oneOf": [
                    {
                        "property": "custom_message_custom_filter",
                        "description": "send a custom message using a custom filter",
                        "properties": {
                            "name": {
                                "description": "name of the queue",
                                "type": "string"
                            },
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            },
                            "message": {
                                "description": "send a custom message",
                                "type": "string"
                            },
                            "survey_id": {
                                "description": "attach a survey to this queue",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "templated_message_custom_filter",
                        "description": "send a templated message using a custom filter",
                        "properties": {
                            "name": {
                                "description": "name of the queue",
                                "type": "string"
                            },
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            },
                            "message_template_id": {
                                "description": "send a templated message",
                                "type": "string"
                            },
                            "survey_id": {
                                "description": "attach a survey to this queue",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "custom_message_templated_filter",
                        "description": "send a custom message using templated filter",
                        "properties": {
                            "name": {
                                "description": "name of the queue",
                                "type": "string"
                            },
                            "filter_template_id": {
                                "description": "use a templated filter",
                                "type": "string"
                            },
                            "message": {
                                "description": "send a custom message",
                                "type": "string"
                            },
                            "survey_id": {
                                "description": "attach a survey to this queue",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "templated_message_templated_filter",
                        "description": "send a templated message using templated filter",
                        "properties": {
                            "name": {
                                "description": "name of the queue",
                                "type": "string"
                            },
                            "filter_template_id": {
                                "description": "use a templated filter",
                                "type": "string"
                            },
                            "message_template_id": {
                                "description": "send a templated message",
                                "type": "string"
                            },
                            "survey_id": {
                                "description": "attach a survey to this queue",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "polling_queue_patch_body": {
                "title": "Queue",
                "properties": {
                    "is_paused": {
                        "$ref": "#/components/schemas/polling_queue_is_paused"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "polling_queue": {
                "title": "Queue",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "queue"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            },
                            "is_paused": {
                                "$ref": "#/components/schemas/polling_queue_is_paused"
                            },
                            "is_complete": {
                                "$ref": "#/components/schemas/polling_queue_is_complete"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_on": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "total": {
                                "description": "number of citizens in the queue both processed and not yet processed",
                                "type": "integer"
                            },
                            "processed": {
                                "description": "number of processed citizens",
                                "type": "integer"
                            },
                            "queued": {
                                "description": "number of citizens not yet processed",
                                "type": "integer"
                            },
                            "successful": {
                                "description": "number of successful messages",
                                "type": "integer"
                            },
                            "failed": {
                                "description": "number of failed messages",
                                "type": "integer"
                            },
                            "success_rate": {
                                "nullable": true,
                                "description": "number of processed citizens divided by number of successful messages (successful / processed), null if total is 0",
                                "type": "number"
                            },
                            "completion_rate": {
                                "nullable": true,
                                "description": "number of total citizens divided by number of processed messages (processed / total), null if total is 0",
                                "type": "number"
                            },
                            "remaining_estimate": {
                                "nullable": true,
                                "description": "estimation of remaining seconds until the queue is completed, null for the first 60 seconds or if the queue is already complete or message throughput is 0",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_survey_submission": {
                "title": "Submission",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "polling_submission"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "data": {
                                "$ref": "#/components/schemas/polling_form"
                            },
                            "submitted_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "token": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "survey": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/polling_survey"
                                    }
                                },
                                "type": "object"
                            },
                            "citizen": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/polling_citizen"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_submission_post_body": {
                "title": "Submission",
                "properties": {
                    "form": {
                        "$ref": "#/components/schemas/polling_form"
                    }
                },
                "type": "object"
            },
            "polling_survey": {
                "title": "Survey",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "polling_survey"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "form": {
                                "$ref": "#/components/schemas/polling_form"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_used_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "is_hidden": {
                                "description": "`1 = Not Hidden, 2 = Hidden`",
                                "type": "int",
                                "enum": [
                                    "1",
                                    "2"
                                ]
                            },
                            "is_hidden_str": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "stats": {
                                "description": "Only `attributes` with types `number`, `checkbox`, `radio`, `img-select` and `autocomplete` are included in stats. Stats will also contain key-value pairs where keys are the `value`s selected by the citizens and values are how many of that `value` is selected.\n * \n\n\tStats example:\n\t\t'stats': [\n\t\t\t{\n\t\t\t\t'_total': 2,\n\t\t\t\t'_empty': 1,\n\t\t\t\t'35': 1,\n\t\t\t\t'_name': 'field1'\n\t\t\t}\n\t\t]\n * This survey had a field named `_name` with type `number`. One participant left this field empty and one participant input the number `35`. If this field was of type `checkbox`, `radio` or `autocomplete`; keys would be `values` of the selectable options",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "_name": {
                                            "description": "Unique identifier of the field",
                                            "type": "string"
                                        },
                                        "_total": {
                                            "description": "Total number of responses (how many people responded to this question including empty responses)",
                                            "type": "integer"
                                        },
                                        "_empty": {
                                            "description": "Total number of empty responses. Should be 0 if field is required",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "status": {
                                "description": "Only available if `survey` is included over `citizen`. Shows whether this survey is still queued and not yet sent, sent to the citizen, seen by the citizen or answered by the citizen. `1 = Queued`, `2 = Sent`, `3 = Seen`, `4 = Answered`",
                                "type": "integer",
                                "enum": [
                                    1,
                                    2,
                                    3,
                                    4
                                ]
                            },
                            "status_str": {
                                "description": "Only available if `survey` is included over `citizen`. Shows whether this survey is still queued and not yet sent, sent to the citizen, seen by the citizen or answered by the citizen. `1 = Queued`, `2 = Sent`, `3 = Seen`, `4 = Answered`",
                                "type": "integer",
                                "enum": [
                                    "queued",
                                    "sent",
                                    "seen",
                                    "answered"
                                ]
                            },
                            "added_on": {
                                "description": "Only available if `survey` is queried over `citizen` (ex: `polling/polling/{citizen_id}/survey`). Date which this survey was queued for this citizen",
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_survey_post_body": {
                "title": "Survey",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "form": {
                        "$ref": "#/components/schemas/polling_form"
                    }
                },
                "type": "object"
            },
            "polling_citizen_tag_post_body": {
                "title": "Tag",
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "color": {
                        "$ref": "#/components/schemas/polling_citizen_tag_color"
                    },
                    "category_id": {
                        "nullable": true,
                        "description": "Tag is placed into default category if value is null or attribute is omitted",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "polling_citizen_tag_patch_body": {
                "title": "Tag",
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "color": {
                        "$ref": "#/components/schemas/polling_citizen_tag_color"
                    },
                    "category_id": {
                        "nullable": true,
                        "description": "Tag is placed into default category if attribute is not omitted and value is null",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "polling_citizen_tag_move_tag_list": {
                "description": "list of tags to be attached or removed from filtered citizens. prefix tag id with '-' to remove a tag. example: \n\n\ttags: [\n\t\t'-60e3f9ffcb323', '60e3fa0323374'\n\t]\n",
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "polling_citizen_tag_color": {
                "title": "Color",
                "description": "Color code in hex form. Defaults to 'B6F9D5'. Ex: 3f8a18",
                "type": "string"
            },
            "polling_citizen_tag_move_post_body": {
                "title": "tag_move_body",
                "type": "object",
                "oneOf": [
                    {
                        "property": "custom_filter",
                        "description": "move citizens to tag using a custom filter",
                        "properties": {
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            },
                            "tags": {
                                "$ref": "#/components/schemas/polling_citizen_tag_move_tag_list"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "templated_filter",
                        "description": "move citizens to tag using a templated filter",
                        "properties": {
                            "filter_template_id": {
                                "description": "use a templated filter",
                                "type": "string"
                            },
                            "tags": {
                                "$ref": "#/components/schemas/polling_citizen_tag_move_tag_list"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "polling_citizen_tag": {
                "title": "Tag",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "tag"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "value": {
                                "type": "string",
                                "pattern": "[a-zA-Z0-9 ]+"
                            },
                            "color": {
                                "$ref": "#/components/schemas/polling_citizen_tag_color"
                            },
                            "category_id": {
                                "type": "string"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "datetime"
                            },
                            "last_used_on": {
                                "nullable": true,
                                "description": "null if not yet used",
                                "type": "string",
                                "format": "datetime"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "category": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/polling_tag_category"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "total": {
                                "description": "How many citizens are tagged by this tag",
                                "type": "integer"
                            },
                            "total_in_area": {
                                "description": "How many citizens are tagged by this tag in selected area. Only available if a selection is specified",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_tag_rule": {
                "title": "Tag",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "tag_rule"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "tag": {
                                "description": "tags used in this rule",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_citizen_tag"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "survey": {
                                "description": "surveys used in this rule",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_survey"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_tag_rule_post_body": {
                "title": "TagRule",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/polling_filter"
                    },
                    "tags": {
                        "description": "array of tag ids",
                        "type": "array",
                        "items": {
                            "description": "tag_id",
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "polling_tag_rule_patch_body": {
                "title": "TagRule",
                "properties": {
                    "name": {
                        "nullable": "true",
                        "type": "string"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/polling_filter"
                    },
                    "tags": {
                        "nullable": "true",
                        "description": "array of tag ids",
                        "type": "array",
                        "items": {
                            "description": "tag_id",
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "204": {
                "description": "No Content"
            },
            "400": {
                "description": "BadRequest",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            },
            "401": {
                "description": "Unatuhorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            },
            "404": {
                "description": "NotFound",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            }
        },
        "parameters": {
            "authorization": {
                "name": "Authorization",
                "in": "header",
                "schema": {
                    "$ref": "#/components/schemas/authorization"
                }
            },
            "comment_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "commentator"
                    ]
                }
            },
            "polling_citizen_category_id": {
                "name": "category_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_category_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "category",
                        "category.{category_include}",
                        "tag",
                        "tag.{tag_include}"
                    ]
                }
            },
            "polling_citizen_category_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "name"
                    ]
                }
            },
            "polling_citizen_category_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "name"
                    ]
                }
            },
            "polling_citizen_id": {
                "name": "citizen_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_citizen_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "message",
                        "message.{message_include}",
                        "tag",
                        "submission",
                        "submission.{submission_include}"
                    ]
                }
            },
            "polling_csbm_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "district",
                        "district.{district_include}"
                    ]
                }
            },
            "polling_district_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "csbm",
                        "csbm.{csbm_include}"
                    ]
                }
            },
            "polling_filter_template_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "polling_filter_template_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "polling_filter_template_id": {
                "name": "filter_template_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_message_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "queue",
                        "message_error"
                    ]
                }
            },
            "polling_message_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "queue_id",
                        "status",
                        "processed_on"
                    ]
                }
            },
            "polling_message_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "queue_id",
                        "status",
                        "processed_on"
                    ]
                }
            },
            "polling_message_id": {
                "name": "message_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_message_template_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "polling_message_template_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "polling_message_template_id": {
                "name": "message_template_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_queue_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "is_complete",
                        "created_on",
                        "updated_on"
                    ]
                }
            },
            "polling_queue_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "is_complete",
                        "created_on",
                        "updated_on"
                    ]
                }
            },
            "queue_id": {
                "name": "queue_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_submission_id": {
                "name": "submission_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_submission_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "survey",
                        "survey.{survey_include}",
                        "citizen",
                        "citizen.{citizen_include}"
                    ]
                }
            },
            "polling_submission_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "submitted_on"
                    ]
                }
            },
            "polling_submission_token": {
                "name": "token",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_survey_id": {
                "name": "survey_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_survey_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "last_used_on",
                        "is_hidden"
                    ]
                }
            },
            "polling_survey_over_citizen_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "last_used_on",
                        "is_hidden",
                        "added_on"
                    ]
                }
            },
            "polling_survey_over_citizen_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "last_used_on",
                        "is_hidden",
                        "added_on"
                    ]
                }
            },
            "polling_survey_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "last_used_on",
                        "is_hidden"
                    ]
                }
            },
            "polling_citizen_tag_id": {
                "name": "tag_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_tag_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "category",
                        "category.{category_include}"
                    ]
                }
            },
            "polling_citizen_tag_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "value",
                        "category_id"
                    ]
                }
            },
            "polling_citizen_tag_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "value",
                        "category_id"
                    ]
                }
            },
            "polling_citizen_tag_selection": {
                "name": "selection",
                "in": "query",
                "schema": {
                    "type": "string",
                    "format": "geojson"
                }
            },
            "tag_rule_id": {
                "name": "tag_rule_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "tag_rule_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "name"
                    ]
                }
            },
            "tag_rule_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "name"
                    ]
                }
            },
            "tag_rule_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "survey",
                        "survey.{survey_include}",
                        "tag",
                        "tag.{tag_include}"
                    ]
                }
            }
        }
    },
    "x-tagGroups": [
        {
            "name": "Task Management",
            "tags": [
                "Task",
                "Subtask",
                "Assignement",
                "Comment",
                "Event",
                "Attachment"
            ]
        },
        {
            "name": "File",
            "tags": [
                "File"
            ]
        },
        {
            "name": "Procedure Management",
            "tags": [
                "Procedure",
                "Subprocedure",
                "Step",
                "Event (Procedure)",
                "Comment (Step)",
                "Attachment (Step)"
            ]
        },
        {
            "name": "GIS",
            "tags": [
                "Stats",
                "Feature",
                "Feature (Public)",
                "Search",
                "Search (Public)",
                "POI",
                "POI (Public)",
                "Custom Feature",
                "Custom Feature (Public)",
                "District",
                "District (Public)",
                "CSBM",
                "CSBM (Public)",
                "Road",
                "Road (Public)",
                "Parcel",
                "Parcel (Public)",
                "Structure",
                "Structure (Public)",
                "Numbering",
                "Numbering (Public)",
                "Independent Section",
                "Independent Section (Public)",
                "Inhabitant",
                "Document",
                "Tag (Structure)",
                "Tag (Parcel)",
                "Comment (Structure)",
                "Comment (Parcel)",
                "Attachment (Structure)",
                "Procedure (Structure)",
                "Procedure (Parcel)",
                "Plan"
            ]
        },
        {
            "name": "Sdm",
            "tags": [
                "Auth (Grocer)",
                "Forgotten Password (Grocer)"
            ]
        },
        {
            "name": "Polling",
            "tags": [
                "Auth",
                "Queue",
                "DirectMessage",
                "DemoMessage",
                "Message",
                "Citizen",
                "MessageTemplate",
                "FilterTemplate",
                "Category (Citizen)",
                "Tag (Citizen)",
                "Survey",
                "Submission",
                "Submission (Public)",
                "Filter",
                "Tag Rule"
            ]
        }
    ]
}