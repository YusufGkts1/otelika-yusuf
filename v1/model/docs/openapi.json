{
    "openapi": "3.0.0",
    "info": {
        "title": "ERP",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "https://api.kant.xyz/v1",
            "description": "Pre Production Server"
        },
        {
            "url": "https://api.gungoren.bel.tr/v1",
            "description": "Production Server"
        },
        {
            "url": "localhost:8080/v1",
            "description": "Local Environment"
        }
    ],
    "paths": {
        "/file": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "Get file",
                "operationId": "ControllerFile::get",
                "parameters": [
                    {
                        "parameter": "token",
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/octet-stream": {}
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/file/zip": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Zip Files",
                "description": "Create a zip file from given file URIs and returns the URI for that zip file. Unauthorized or non-existing files will be skipped.",
                "operationId": "ControllerFile::zip",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "properties": {
                                                    "files": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "uri": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/task_management/task": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get Tasks",
                "description": "Returns tasks and subtasks that are related to the `active` personnel",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_order_by"
                    },
                    {
                        "$ref": "#/components/parameters/task_filter"
                    },
                    {
                        "$ref": "#/components/parameters/task_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create Task",
                "operationId": "ControllerTaskManagementTask::createTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/authorization"
                    },
                    {
                        "$ref": "#/components/parameters/task_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/task_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get Single Task",
                "description": "Returns a single task and it's subtasks that is related to the `active` personnel",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/task_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Remove Task",
                "operationId": "ControllerTaskManagementTask::removeTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Task"
                ],
                "summary": "Update Task",
                "operationId": "ControllerTaskManagementTask::updateTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    },
                    {
                        "$ref": "#/components/parameters/task_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/task_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/comment": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get Task Comments",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Comment On Task",
                "operationId": "ControllerTaskManagementTask::commentOnTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/event": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get Task Events",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/event_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/event"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/attachment": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Get Task Attachments",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attachment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Add Task Attachment",
                "operationId": "ControllerTaskManagementTask::addTaskAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/attachment_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask": {
            "get": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Get Subtasks",
                "description": "Returns a tasks's subtasks",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/subtask"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Create Subtask",
                "operationId": "ControllerTaskManagementTask::createSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/task_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/subtask"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}": {
            "get": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Get Single Subtask",
                "description": "Returns a single subtask",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/subtask"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Remove Subtask",
                "operationId": "ControllerTaskManagementTask::removeSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Update Subtask",
                "operationId": "ControllerTaskManagementTask::updateSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/task_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/subtask"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/comment": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get Subtask Comments",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Comment On Subtask",
                "operationId": "ControllerTaskManagementTask::commentOnSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/event": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get Subtask Events",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/event_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/event"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/attachment": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Get Subtask Attachments",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attachment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Add Subtask Attachment",
                "operationId": "ControllerTaskManagementTask::addSubtaskAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/attachment_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/assign/{personnel_id}": {
            "post": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Assign Task",
                "operationId": "ControllerTaskManagementTask::assignTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/personnel_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/personnel_basic"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Deassign Task",
                "operationId": "ControllerTaskManagementTask::deassignTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/personnel_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/assign/{personnel_id}": {
            "post": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Assign Subtask",
                "operationId": "ControllerTaskManagementTask::assignSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/personnel_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/personnel_basic"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Deassign Subtask",
                "operationId": "ControllerTaskManagementTask::deassignSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/personnel_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/comment/{comment_id}": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Remove Task Comment",
                "operationId": "ControllerTaskManagementTask::removeComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update Task Comment",
                "operationId": "ControllerTaskManagementTask::editTaskComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/comment/{comment_id}": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Remove Subtask Comment",
                "operationId": "ControllerTaskManagementTask::removeSubtaskComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update Subtask Comment",
                "operationId": "ControllerTaskManagementTask::editSubtaskComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/attachment/{attachment_id}": {
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Remove Task Attachment",
                "operationId": "ControllerTaskManagementTask::removeAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/attachment/{attachment_id}": {
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Remove Subtask Attachment",
                "operationId": "ControllerTaskManagementTask::removeSubtaskAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "comment_body": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "attachment_body": {
                "required": [
                    "name",
                    "base64"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "base64": {
                        "type": "binary"
                    }
                },
                "type": "object"
            },
            "task_priority": {
                "title": "TaskPriority",
                "properties": {
                    "priority": {
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            "Clear",
                            "Low",
                            "Medium",
                            "High",
                            "Urgent"
                        ]
                    }
                },
                "type": "object"
            },
            "task_status": {
                "title": "TaskStatus",
                "properties": {
                    "status": {
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            "Open",
                            "InProgress",
                            "Delayed",
                            "Complete",
                            "Cancelled"
                        ]
                    }
                },
                "type": "object"
            },
            "task_post_body": {
                "required": [
                    "title",
                    "assignee",
                    "description",
                    "due_date",
                    "location",
                    "priority",
                    "status"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "assignee": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "location": {
                        "properties": {
                            "latitude": {
                                "type": "string",
                                "maximum": "90",
                                "minimum": "-90"
                            },
                            "longitude": {
                                "type": "string",
                                "maximum": "180",
                                "minimum": "-180"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "priority": {
                        "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "status": {
                        "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "task_patch_body": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "location": {
                        "properties": {
                            "latitude": {
                                "type": "string",
                                "maximum": "90",
                                "minimum": "-90"
                            },
                            "longitude": {
                                "type": "string",
                                "maximum": "180",
                                "minimum": "-180"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "priority": {
                        "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "status": {
                        "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "comment_patch_body": {
                "title": "Comment",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "authorization": {
                "type": "string"
            },
            "error": {
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "errors": {
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                },
                "type": "object"
            },
            "personnel_basic": {
                "title": "Personnel Basic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "image_uri": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "firstname": {
                                "type": "string"
                            },
                            "lastname": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "attachment": {
                "title": "attachment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "extension": {
                                "type": "string",
                                "nullable": true
                            },
                            "uri": {
                                "description": "Direct access URI",
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "uploader": {
                                "description": "NULL if attachment was added by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": "true"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "comment": {
                "title": "Comment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "commented_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "commentator": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "event": {
                "title": "Event",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "type": {
                                "description": "`StatusChanged = 1`, `TitleChanged = 2`, `Assigned = 3`, `Deassigned = 4`, `DescriptionUpdated = 5`, `DueDateChanged = 6`, `SubtaskCreated = 7`, `SubtaskRemoved = 8`, `PriorityChanged = 10`, `LocationChanged = 11`, `AttachmentAttached = 12`, `AttachmentRemoved = 13`, `StartDateChanged = 14`",
                                "type": "integer",
                                "maximum": 14,
                                "minimum": 1
                            },
                            "occurred_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "data": {
                                "description": "\n  *     Depending on the event type, this object will contain following properties: \n  *     `type == 1` => `{ status_old: int, status_new: int }`,\n  *     `type == 2` => `{ title_old: string, title_new: string }`,\n  *     `type == 3` => `{ assignee: int }`,\n  *     `type == 4` => `{ assignee: int }`,\n  *     `type == 5` => `{ description: string }`,\n  *     `type == 6` => `{ due_date_old: string(datetime), due_date_new: string(datetime) }`,\n  *     `type == 7` => `{ title: string }`,\n  *     `type == 8` => `{ title: string }`,\n  *     `type == 10` => `{ priority_old: int, priority_new: int }`,\n  *     `type == 11` => `{ location: { latitude: string, longitude: string } }`,\n  *     `type == 12` => `{ name: string }`,\n  *     `type == 13` => `{ name: string }`,\n  *     `type == 14` => `{ start_date_old: string(datetime), start_date_new: string(datetime) }`\n  *    ",
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "enabler": {
                                "description": "NULL if event was triggered by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "subtask": {
                "title": "Subtask",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "assigner": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string",
                                "nullable": true
                            },
                            "due_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "location": {
                                "properties": {
                                    "latitude": {
                                        "type": "string",
                                        "maximum": "90",
                                        "minimum": "-90"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "maximum": "180",
                                        "minimum": "-180"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "priority": {
                                "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "status": {
                                "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "assignee": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "task": {
                "title": "Task",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "assigner": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string",
                                "nullable": true
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "due_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "location": {
                                "properties": {
                                    "latitude": {
                                        "type": "string",
                                        "maximum": "90",
                                        "minimum": "-90"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "maximum": "180",
                                        "minimum": "-180"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "priority": {
                                "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "status": {
                                "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "subtask": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/subtask"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "assignee": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "204": {
                "description": "No Content"
            },
            "400": {
                "description": "BadRequest",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            },
            "401": {
                "description": "Unatuhorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            },
            "404": {
                "description": "NotFound",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            }
        },
        "/gis/authorized/structure/{structure_id}/image/{z}/{x}/{y}": {
            "get": {
                "tags": [
                    "Structure"
                ],
                "summary": "Get Image of Structure",
                "operationId": "ControllerGisAuthorized::get_structure_image",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/structure_id"
                    },
                    {
                        "parameter": "structure_image_z",
                        "name": "z",
                        "in": "path",
                        "description": "zoom",
                        "schema": {
                            "type": "string",
                            "default": 1
                        }
                    },
                    {
                        "parameter": "structure_image_x",
                        "name": "x",
                        "in": "path",
                        "description": "column. Defaults to: `0 if z is 1` | `1 if z is 2` | `4 if z is 3`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "structure_image_y",
                        "name": "y",
                        "in": "path",
                        "description": "row. Defaults to: `0 if z is 1` | `1 if z is 2` | `4 if z is 3`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "format": "base64",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/authorized/document/{bulten_no}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get Document Details",
                "operationId": "ControllerGisAuthorized::get_document",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/document_id"
                    },
                    {
                        "parameter": "yapi_belge_tip",
                        "name": "yapi_belge_tip",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "`1 = Yapı Ruhsat Belgesi`, `2 = Yapı Kullanma İzni Belgesi`, `3 = Yanan ve Yıkılan Belgesi`",
                            "type": "integer"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/document"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/authorized/numbering/{bina_no}/document": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get Documents of Numbering",
                "operationId": "ControllerGisAuthorized::fetch_documents_of_numbering",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/numbering_id"
                    },
                    {
                        "$ref": "#/components/parameters/document_brief_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/document_brief"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/authorized/structure/{structure_id}/comment/{comment_id}": {
            "delete": {
                "tags": [
                    "Comment (Structure)"
                ],
                "summary": "Remove Structure Comment",
                "operationId": "ControllerGisAuthorized::remove_comment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/structure_id"
                    },
                    {
                        "$ref": "#/components/parameters/structure_comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comment (Structure)"
                ],
                "summary": "Update Structure Comment",
                "operationId": "ControllerGisAuthorized::edit_comment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/structure_id"
                    },
                    {
                        "$ref": "#/components/parameters/structure_comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/structure_comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_request_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/structure_comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/authorized/ada/{ada_no}/parsel/{parsel_no}/comment/{comment_id}": {
            "delete": {
                "tags": [
                    "Comment (Parcel)"
                ],
                "summary": "Remove Parcel Comment",
                "operationId": "ControllerGisAuthorized::remove_parcel_comment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ada_no"
                    },
                    {
                        "$ref": "#/components/parameters/parsel_no"
                    },
                    {
                        "$ref": "#/components/parameters/structure_comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comment (Parcel)"
                ],
                "summary": "Update Parcel Comment",
                "operationId": "ControllerGisAuthorized::edit_parcel_comment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ada_no"
                    },
                    {
                        "$ref": "#/components/parameters/parsel_no"
                    },
                    {
                        "$ref": "#/components/parameters/structure_comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/structure_comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_request_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/parcel_comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/authorized/structure/{structure_id}/tag/{tag_type}": {
            "delete": {
                "tags": [
                    "Tag (Structure)"
                ],
                "summary": "Untag a Structure",
                "operationId": "ControllerGisAuthorized::untag_structure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/structure_id"
                    },
                    {
                        "parameter": "tag_type",
                        "name": "tag_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/structure_tag_type"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/authorized/structure/{structure_id}/attachment/{attachment_id}": {
            "delete": {
                "tags": [
                    "Attachment (Structure)"
                ],
                "summary": "Remove Structure Attachment",
                "operationId": "ControllerGisAuthorized::remove_attachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/structure_id"
                    },
                    {
                        "$ref": "#/components/parameters/structure_attachment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public_public": {
            "get": {
                "tags": [
                    "Feature (Public)"
                ],
                "summary": "Get Features in Selection",
                "description": "At least one `selection filter` must be provided. `selection filter` operators:\n  *    within\n  *    contains\n  *    touches\n  *    intersects\n  *    disjoint\n\n\nSome operators may not be supported by some of the selection types. Each selection type has it's default operator and this operator will be used if operator information is omitted. Default operators:\n  *    Polygon -> within\n  *    Circular -> within\n  *    Line -> intersects\n\t \n\t \nValid filter examples:\n  *   filter[selection]={\"type\":\"Point\",\"coordinates\":[41.040820288,28.877453013]}\n  *   filter[selection]=\"type\":\"Circle\",\"properties\":{\"radius\":443.0003055263856},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-74.008317,40.72251],\"radius\":443.0003055263856}}\n  *   filter[selection][within]={\"type\":\"Polygon\",\"coordinates\":[[[41.0426187750078,28.8687407636496],[41.0425359612035,28.868791166567],[41.042584847112,28.86892701616],[41.0426660047092,28.8688753006536],[41.0426187750078,28.8687407636496]]]}\n  *   filter[selection][disjoint][]={\"type\":\"Polygon\",\"coordinates\":[[[41.0426187750078,28.8687407636496],[41.0425359612035,28.868791166567],[41.042584847112,28.86892701616],[41.0426660047092,28.8688753006536],[41.0426187750078,28.8687407636496]]]}\n  *   filter[selection][disjoint][]={\"type\":\"Polygon\",\"coordinates\":[[[41.0424555102178,28.8688470131439],[41.0423746461538,28.8688962286338],[41.042417608399,28.8690312122945],[41.0425006716229,28.8689797760648],[41.0424555102178,28.8688470131439]]]}",
                "operationId": "ControllerGisPublic::fetch_features",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/srid"
                    },
                    {
                        "$ref": "#/components/parameters/feature_public_include"
                    },
                    {
                        "$ref": "#/components/parameters/feature_filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/feature_public"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "total_pages": {
                                                    "type": "integer"
                                                },
                                                "total_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "stats": {
                                            "properties": {
                                                "parsel": {
                                                    "type": "integer"
                                                },
                                                "parsel_alani": {
                                                    "type": "number"
                                                },
                                                "yapi": {
                                                    "type": "integer"
                                                },
                                                "yapi_mesken": {
                                                    "type": "integer"
                                                },
                                                "yapi_isyeri": {
                                                    "type": "integer"
                                                },
                                                "yapi_kamu": {
                                                    "type": "integer"
                                                },
                                                "yapi_diger": {
                                                    "type": "integer"
                                                },
                                                "numarataj": {
                                                    "type": "integer"
                                                },
                                                "bagimsiz_bolum": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gis/public/feature/{{feature_id}}": {
            "get": {
                "tags": [
                    "Feature (Public)"
                ],
                "summary": "Get Single Feature",
                "operationId": "ControllerGisPublic::get_feature",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/feature_id"
                    },
                    {
                        "$ref": "#/components/parameters/feature_public_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/feature_public"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/search": {
            "get": {
                "tags": [
                    "Search (Public)"
                ],
                "summary": "Search",
                "operationId": "ControllerGisPublic::search",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/phrase"
                    },
                    {
                        "$ref": "#/components/parameters/search_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/structure_basic"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/csbm_public"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/district_public"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/road_public"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/poi"
                                                    }
                                                ]
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "total_pages": {
                                                    "type": "integer"
                                                },
                                                "total_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gis/public/ada/{ada_no}/parsel/{parsel_no}": {
            "get": {
                "tags": [
                    "Parcel (Public)"
                ],
                "summary": "Get Single Parcel",
                "operationId": "ControllerGisPublic::get_parcel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ada_no"
                    },
                    {
                        "$ref": "#/components/parameters/parsel_no"
                    },
                    {
                        "$ref": "#/components/parameters/parcel_public_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/parcel_public"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/poi": {
            "get": {
                "tags": [
                    "POI (Public)"
                ],
                "summary": "Get Points of Interest",
                "operationId": "ControllerGisPublic::fetch_poi",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/poi_include"
                    },
                    {
                        "$ref": "#/components/parameters/poi_filter"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/poi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/gis/public/poi/{{poi_id}}": {
            "get": {
                "tags": [
                    "POI (Public)"
                ],
                "summary": "Get Single Point of Interest",
                "operationId": "ControllerGisPublic::get_poi",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/poi_id"
                    },
                    {
                        "$ref": "#/components/parameters/poi_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/poi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/custom_feature_category": {
            "get": {
                "tags": [
                    "Custom Feature (Public)"
                ],
                "summary": "Fetch Custom Feature Categories",
                "operationId": "ControllerGisPublic::fetch_custom_feature_categories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/custom_feature_category_public"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gis/public/custom_feature": {
            "get": {
                "tags": [
                    "Custom Feature (Public)"
                ],
                "summary": "Fetch Custom Features",
                "operationId": "ControllerGisPublic::fetch_custom_features",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/custom_feature_public_include"
                    },
                    {
                        "$ref": "#/components/parameters/custom_feature_public_filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "meta": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "total_pages": {
                                                            "type": "integer"
                                                        },
                                                        "total_count": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/custom_feature_public"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gis/public/district": {
            "get": {
                "tags": [
                    "District (Public)"
                ],
                "summary": "Get Districts",
                "operationId": "ControllerGisPublic::fetch_districts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/district_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/district_public"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gis/public/district/{mahalle_kodu}": {
            "get": {
                "tags": [
                    "District (Public)"
                ],
                "summary": "Get Single District",
                "operationId": "ControllerGisPublic::get_district",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/district_id"
                    },
                    {
                        "$ref": "#/components/parameters/district_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/district_public"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/csbm/{csbm_kodu}": {
            "get": {
                "tags": [
                    "CSBM (Public)"
                ],
                "summary": "Get Single CSBM",
                "operationId": "ControllerGisPublic::get_csbm",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/csbm_id"
                    },
                    {
                        "$ref": "#/components/parameters/csbm_public_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/csbm_public"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/district/{district_id}/csbm": {
            "get": {
                "tags": [
                    "CSBM (Public)"
                ],
                "summary": "Get CSBM of District",
                "operationId": "ControllerGisPublic::fetch_csbm_of_district",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/district_id"
                    },
                    {
                        "$ref": "#/components/parameters/csbm_public_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/csbm_public"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/structure/{structure_id}": {
            "get": {
                "tags": [
                    "Structure (Public)"
                ],
                "summary": "Get Single Structure",
                "operationId": "ControllerGisPublic::get_structure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/structure_id"
                    },
                    {
                        "$ref": "#/components/parameters/structure_public_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/structure_basic"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/numbering/{bina_no}": {
            "get": {
                "tags": [
                    "Numbering (Public)"
                ],
                "summary": "Get Single Numering",
                "operationId": "ControllerGisPublic::get_numbering",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/numbering_id"
                    },
                    {
                        "$ref": "#/components/parameters/numbering_public_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/numbering_public"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/structure/{structure_id}/numbering": {
            "get": {
                "tags": [
                    "Numbering (Public)"
                ],
                "summary": "Get Numberings of Structure",
                "operationId": "ControllerGisPublic::fetch_numberings_of_structure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/structure_id"
                    },
                    {
                        "$ref": "#/components/parameters/numbering_public_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/numbering_public"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/csbm/{csbm_kodu}/numbering": {
            "get": {
                "tags": [
                    "Numbering (Public)"
                ],
                "summary": "Get Numberings of CSBM",
                "operationId": "ControllerGisPublic::fetch_numberings_of_csbm",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/csbm_id"
                    },
                    {
                        "$ref": "#/components/parameters/numbering_public_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/numbering_public"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/gis/public/independent_section/{adres_no}": {
            "get": {
                "tags": [
                    "Independent Section (Public)"
                ],
                "summary": "Get Single Independent Section",
                "operationId": "ControllerGisPublic::get_independent_section",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/independent_section_id"
                    },
                    {
                        "$ref": "#/components/parameters/independent_section_include_public"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/independent_section_public"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/numbering/{bina_no}/independent_section": {
            "get": {
                "tags": [
                    "Independent Section (Public)"
                ],
                "summary": "Get Independent Sections of Numbering",
                "operationId": "ControllerGisPublic::fetch_independent_sections_of_numbering",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/numbering_id"
                    },
                    {
                        "$ref": "#/components/parameters/independent_section_include_public"
                    },
                    {
                        "$ref": "#/components/parameters/independent_section_filter"
                    },
                    {
                        "$ref": "#/components/parameters/independent_section_order_by"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/independent_section_public"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/road/{kimlik_no}": {
            "get": {
                "tags": [
                    "Road (Public)"
                ],
                "summary": "Get Single Road",
                "operationId": "ControllerGisPublic::get_road",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/road_id"
                    },
                    {
                        "$ref": "#/components/parameters/road_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/road_public"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/gis/public/structure/{structure_id}/image/{z}/{x}/{y}": {
            "get": {
                "tags": [
                    "Structure (Public)"
                ],
                "summary": "Get Image of Structure",
                "operationId": "ControllerGisPublic::get_structure_image",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/structure_id"
                    },
                    {
                        "parameter": "structure_image_z",
                        "name": "z",
                        "in": "path",
                        "description": "zoom",
                        "schema": {
                            "type": "string",
                            "default": 1
                        }
                    },
                    {
                        "parameter": "structure_image_x",
                        "name": "x",
                        "in": "path",
                        "description": "column. Defaults to: `0 if z is 1` | `1 if z is 2` | `4 if z is 3`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "parameter": "structure_image_y",
                        "name": "y",
                        "in": "path",
                        "description": "row. Defaults to: `0 if z is 1` | `1 if z is 2` | `4 if z is 3`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "format": "base64",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/polling/polling/queue": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Fetch Queues",
                "operationId": "ControllerPollingPolling::fetchQueues",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_queue_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_queue_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_queue"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Queue"
                ],
                "summary": "Create a SMS queue",
                "operationId": "ControllerPollingPolling::createQueue",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_queue_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_queue"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/queue/{queue_id}": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Get Single Queue",
                "operationId": "ControllerPollingPolling::getQueue",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/queue_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_queue"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message/{message_id}": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get Single Message",
                "operationId": "ControllerPollingPolling::getMessage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/pending_direct_message": {
            "get": {
                "tags": [
                    "DirectMessage"
                ],
                "summary": "Fetch Pending Direct Messages",
                "operationId": "ControllerPollingPolling::fetchPendingDirectMessages",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_pending_direct_message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/failed_direct_message": {
            "get": {
                "tags": [
                    "DirectMessage"
                ],
                "summary": "Fetch Failed Direct Messages",
                "operationId": "ControllerPollingPolling::fetchFailedDirectMessages",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_failed_direct_message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/queue/{queue_id}/error": {
            "get": {
                "tags": [
                    "Queue"
                ],
                "summary": "Fetch Queue Errors",
                "operationId": "ControllerPollingPolling::fetchErrors",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_message_error"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/citizen/{citizen_id}": {
            "get": {
                "tags": [
                    "Citizen"
                ],
                "summary": "Get Citizen",
                "operationId": "ControllerPollingPolling::getCitizen",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_citizen_include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_citizen"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/citizen/{citizen_id}/message": {
            "get": {
                "tags": [
                    "Citizen"
                ],
                "summary": "Fetch Citizen Messages",
                "operationId": "ControllerPollingPolling::fetchCitizenMessages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_citizen_id"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_include"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message_template": {
            "get": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Fetch Message Templates",
                "operationId": "ControllerPollingPolling::fetchMessageTemplates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_template_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_message_template_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_message_template"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Create a Message Template",
                "operationId": "ControllerPollingPolling::createMessageTemplate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_message_template_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message_template/{message_template_id}": {
            "get": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Get Single Message Template",
                "operationId": "ControllerPollingPolling::getMessageTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_template_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Remove a Message Template",
                "operationId": "ControllerPollingPolling::removeMessageTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_template_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            },
            "patch": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Update a Message Template",
                "operationId": "ControllerPollingPolling::updateMessageTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_message_template_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_message_template_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/filter_template": {
            "get": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Fetch Filter Templates",
                "operationId": "ControllerPollingPolling::fetchFilterTemplates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_filter_template_filter"
                    },
                    {
                        "$ref": "#/components/parameters/polling_filter_template_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/polling_filter_template"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Create a Filter Template",
                "operationId": "ControllerPollingPolling::createFilterTemplate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_filter_template_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_filter_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/filter_template/{filter_template_id}": {
            "get": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Get Single Filter Template",
                "operationId": "ControllerPollingPolling::getFilterTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_filter_template_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_filter_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Remove a Filter Template",
                "operationId": "ControllerPollingPolling::removeFilterTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_filter_template_id"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            },
            "patch": {
                "tags": [
                    "FilterTemplate"
                ],
                "summary": "Update a Filter Template",
                "operationId": "ControllerPollingPolling::updateFilterTemplate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/polling_filter_template_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_filter_template_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_filter_template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/polling/polling/message": {
            "post": {
                "tags": [
                    "DirectMessage"
                ],
                "summary": "Send a Direct Message",
                "operationId": "ControllerPollingPolling::sendMessage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/polling_direct_message_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/polling_message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/procedure_management/application": {
            "post": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Apply For Procedure",
                "operationId": "ControllerProcedureManagementApplication::apply",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/container_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "captcha": {
                                        "type": "string"
                                    },
                                    "confirmation": {
                                        "description": "true if user aggrees to the terms",
                                        "type": "bool"
                                    },
                                    "initiator": {
                                        "type": "object",
                                        "oneOf": [
                                            {
                                                "schema": "individual",
                                                "properties": {
                                                    "type": {
                                                        "description": "\n  *          `Individual = 1`\n  *          `Corporate = 2`",
                                                        "type": "int"
                                                    },
                                                    "tcno": {
                                                        "type": "string",
                                                        "maxLength": 11,
                                                        "minLength": 11,
                                                        "pattern": "^[0-9]$"
                                                    },
                                                    "firstname": {
                                                        "type": "string"
                                                    },
                                                    "lastname": {
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "schema": "corporate",
                                                "properties": {
                                                    "type": {
                                                        "description": "\n  *          `Individual = 1`\n  *          `Corporate = 2`",
                                                        "type": "int"
                                                    },
                                                    "tax_number": {
                                                        "description": "can be either a TCNO or a tax number",
                                                        "type": "string",
                                                        "maxLength": 11,
                                                        "minLength": 10,
                                                        "pattern": "^[0-9]$"
                                                    },
                                                    "tax_office": {
                                                        "type": "string"
                                                    },
                                                    "corporate_name": {
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    "form": {
                                        "description": "Must be of format: { form: { items: [{...}, ...] } }",
                                        "type": "string",
                                        "format": "json"
                                    },
                                    "kvkk": {
                                        "description": "true if user aggrees to the terms",
                                        "type": "bool"
                                    },
                                    "repeatable": {
                                        "type": "bool"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/procedure_management/procedure": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Fetch Procedures",
                "operationId": "ControllerProcedureManagementProcedure::fetchProcedures",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_filter"
                    },
                    {
                        "$ref": "#/components/parameters/procedure_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/procedure"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "post": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Start Procedure",
                "operationId": "ControllerProcedureManagementProcedure::startProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/authorization"
                    },
                    {
                        "$ref": "#/components/parameters/procedure_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "oneOf": [
                                            {
                                                "property": "attributes",
                                                "properties": {
                                                    "attributes": {
                                                        "required": [
                                                            "structure_id",
                                                            "procedure_type",
                                                            "description"
                                                        ],
                                                        "properties": {
                                                            "structure_id": {
                                                                "type": "string"
                                                            },
                                                            "procedure_type": {
                                                                "$ref": "#/components/schemas/procedure_type_structure"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "property": "attributes",
                                                "properties": {
                                                    "attributes": {
                                                        "required": [
                                                            "ada",
                                                            "parsel",
                                                            "procedure_type",
                                                            "description"
                                                        ],
                                                        "properties": {
                                                            "ada": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "parsel": {
                                                                "type": "string"
                                                            },
                                                            "procedure_type": {
                                                                "$ref": "#/components/schemas/procedure_type_parcel"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/procedure"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/procedure_management/procedure/category": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Fetch Categories",
                "operationId": "ControllerProcedureManagementProcedure::fetchCategories",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_category_filter"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/procedure_category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Get Single Procedure",
                "operationId": "ControllerProcedureManagementProcedure::singleProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/procedure_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/procedure"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Cancel Procedure",
                "operationId": "ControllerProcedureManagementProcedure::cancelProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Update procedure",
                "operationId": "ControllerProcedureManagementProcedure::updateProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/procedure_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "properties": {
                                                    "description": {
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/procedure"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/event": {
            "get": {
                "tags": [
                    "Event (Procedure)"
                ],
                "summary": "Fetch Procedure Events",
                "operationId": "ControllerProcedureManagementProcedure::procedureEvents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/procedure_event_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/procedure_event"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/event/{event_id}": {
            "get": {
                "tags": [
                    "Event (Procedure)"
                ],
                "summary": "Get Single Event",
                "operationId": "ControllerProcedureManagementProcedure::singleEvent",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/procedure_event_id"
                    },
                    {
                        "$ref": "#/components/parameters/procedure_event_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/procedure_event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/attachment": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Fetch Procedure Attachemnts",
                "description": "Aggregates procedure's steps' attachments",
                "operationId": "ControllerProcedureManagementProcedure::procedureAttachments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/step_attachment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/comment": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Fetch Procedure Comments",
                "description": "Aggregates procedure's steps' comments",
                "operationId": "ControllerProcedureManagementProcedure::procedureComments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/step_comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/subprocedure": {
            "get": {
                "tags": [
                    "Subprocedure"
                ],
                "summary": "Get Subprocedures of Procedure",
                "operationId": "ControllerProcedureManagementProcedure::subproceduresOfProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/subprocedure_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/subprocedure"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/subprocedure/{subprocedure_id}": {
            "get": {
                "tags": [
                    "Subprocedure"
                ],
                "summary": "Get Single Subprocedure",
                "operationId": "ControllerProcedureManagementProcedure::singleSubprocedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/subprocedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/subprocedure_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/subprocedure"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/step": {
            "get": {
                "tags": [
                    "Step"
                ],
                "summary": "Get Procedure Steps",
                "operationId": "ControllerProcedureManagementProcedure::stepsOfProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/step"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/step/{step_id}": {
            "get": {
                "tags": [
                    "Step"
                ],
                "summary": "Get Single Step",
                "operationId": "ControllerProcedureManagementProcedure::singleStep",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/step"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/step/{step_id}/comment": {
            "get": {
                "tags": [
                    "Comment (Step)"
                ],
                "summary": "Get Step Comments",
                "operationId": "ControllerProcedureManagementProcedure::stepComments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/step_comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment (Step)"
                ],
                "summary": "Comment on Step",
                "operationId": "ControllerProcedureManagementProcedure::addComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_request_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/step_comment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/step/{step_id}/comment/{comment_id}": {
            "get": {
                "tags": [
                    "Comment (Step)"
                ],
                "summary": "Get Single Comment",
                "operationId": "ControllerProcedureManagementProcedure::singleComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/step_comment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comment (Step)"
                ],
                "summary": "Remove Step Comment",
                "operationId": "ControllerProcedureManagementProcedure::removeComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comment (Step)"
                ],
                "summary": "Update Step Comment",
                "operationId": "ControllerProcedureManagementProcedure::editStepComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    },
                    {
                        "$ref": "#/components/parameters/step_comment_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_request_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/step_comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/step/{step_id}/attachment": {
            "get": {
                "tags": [
                    "Attachment (Step)"
                ],
                "summary": "Get Step Attachments",
                "operationId": "ControllerProcedureManagementProcedure::stepAttachments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/step_attachment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attachment (Step)"
                ],
                "summary": "Add Attachment To Step",
                "operationId": "ControllerProcedureManagementProcedure::addAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "required": [
                                                    "base64",
                                                    "name"
                                                ],
                                                "properties": {
                                                    "base64": {
                                                        "type": "binary"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/step_attachment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/step/{step_id}/attachment/{attachment_id}": {
            "get": {
                "tags": [
                    "Attachment (Step)"
                ],
                "summary": "Get Single Attachment",
                "operationId": "ControllerProcedureManagementProcedure::singleAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_attachment_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/step_attachment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attachment (Step)"
                ],
                "summary": "Remove Step Attachment",
                "operationId": "ControllerProcedureManagementProcedure::removeAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_id"
                    },
                    {
                        "$ref": "#/components/parameters/step_attachment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/advance": {
            "post": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Advance Procedure",
                "operationId": "ControllerProcedureManagementProcedure::advanceProcedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/procedure_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "required": [
                                                    "container_id",
                                                    "choice"
                                                ],
                                                "properties": {
                                                    "choice": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/procedure"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/procedure_management/procedure/{procedure_id}/subprocedure/{subprocedure_id}/advance": {
            "post": {
                "tags": [
                    "Subprocedure"
                ],
                "summary": "Advance Subprocedure",
                "operationId": "ControllerProcedureManagementProcedure::advanceSubprocedure",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/procedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/subprocedure_id"
                    },
                    {
                        "$ref": "#/components/parameters/subprocedure_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "required": [
                                                    "container_id",
                                                    "choice"
                                                ],
                                                "properties": {
                                                    "choice": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/subprocedure"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get Tasks",
                "description": "Returns tasks and subtasks that are related to the `active` personnel",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_order_by"
                    },
                    {
                        "$ref": "#/components/parameters/task_filter"
                    },
                    {
                        "$ref": "#/components/parameters/task_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Create Task",
                "operationId": "ControllerTaskManagementTask::createTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/authorization"
                    },
                    {
                        "$ref": "#/components/parameters/task_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/task_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get Single Task",
                "description": "Returns a single task and it's subtasks that is related to the `active` personnel",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/task_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Remove Task",
                "operationId": "ControllerTaskManagementTask::removeTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Task"
                ],
                "summary": "Update Task",
                "operationId": "ControllerTaskManagementTask::updateTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    },
                    {
                        "$ref": "#/components/parameters/task_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/task_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/comment": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get Task Comments",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Comment On Task",
                "operationId": "ControllerTaskManagementTask::commentOnTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/event": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get Task Events",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/event_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/event"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/attachment": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Get Task Attachments",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attachment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Add Task Attachment",
                "operationId": "ControllerTaskManagementTask::addTaskAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/attachment_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask": {
            "get": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Get Subtasks",
                "description": "Returns a tasks's subtasks",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/subtask"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Create Subtask",
                "operationId": "ControllerTaskManagementTask::createSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_include"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/task_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/subtask"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}": {
            "get": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Get Single Subtask",
                "description": "Returns a single subtask",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/subtask"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Remove Subtask",
                "operationId": "ControllerTaskManagementTask::removeSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Subtask"
                ],
                "summary": "Update Subtask",
                "operationId": "ControllerTaskManagementTask::updateSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/task_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/subtask"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/comment": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get Subtask Comments",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Comment On Subtask",
                "operationId": "ControllerTaskManagementTask::commentOnSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/event": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get Subtask Events",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/event_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/event"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/attachment": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Get Subtask Attachments",
                "operationId": "ControllerTaskManagementTask::get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attachment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Add Subtask Attachment",
                "operationId": "ControllerTaskManagementTask::addSubtaskAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/attachment_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/assign/{personnel_id}": {
            "post": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Assign Task",
                "operationId": "ControllerTaskManagementTask::assignTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/personnel_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/personnel_basic"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Deassign Task",
                "operationId": "ControllerTaskManagementTask::deassignTask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/personnel_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/assign/{personnel_id}": {
            "post": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Assign Subtask",
                "operationId": "ControllerTaskManagementTask::assignSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/personnel_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/personnel_basic"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Deassign Subtask",
                "operationId": "ControllerTaskManagementTask::deassignSubtask",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/personnel_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/comment/{comment_id}": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Remove Task Comment",
                "operationId": "ControllerTaskManagementTask::removeComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update Task Comment",
                "operationId": "ControllerTaskManagementTask::editTaskComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/comment/{comment_id}": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Remove Subtask Comment",
                "operationId": "ControllerTaskManagementTask::removeSubtaskComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update Subtask Comment",
                "operationId": "ControllerTaskManagementTask::editSubtaskComment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_id"
                    },
                    {
                        "$ref": "#/components/parameters/comment_include"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/comment_patch_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/attachment/{attachment_id}": {
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Remove Task Attachment",
                "operationId": "ControllerTaskManagementTask::removeAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/task_management/task/{task_id}/subtask/{subtask_id}/attachment/{attachment_id}": {
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "summary": "Remove Subtask Attachment",
                "operationId": "ControllerTaskManagementTask::removeSubtaskAttachment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/task_id"
                    },
                    {
                        "$ref": "#/components/parameters/subtask_id"
                    },
                    {
                        "$ref": "#/components/parameters/attachment_id"
                    },
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "custom_feature_request_body": {
                "title": "CustomFeature",
                "required": [
                    "category",
                    "title",
                    "geometry",
                    "description"
                ],
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "geometry": {
                        "type": "string",
                        "format": "GeoJSON"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "structure_tag_request_body": {
                "title": "Tag",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/structure_tag_type"
                    }
                },
                "type": "object"
            },
            "parcel_tag_request_body": {
                "title": "Tag",
                "required": [
                    "tag"
                ],
                "properties": {
                    "tag": {
                        "$ref": "#/components/schemas/parcel_tag_type"
                    }
                },
                "type": "object"
            },
            "structure_comment_request_body": {
                "title": "Comment",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "custom_feature_patch_body": {
                "title": "CustomFeature",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "comment_request_body": {
                "title": "Comment",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "comment_body": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "attachment_body": {
                "required": [
                    "name",
                    "base64"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "base64": {
                        "type": "binary"
                    }
                },
                "type": "object"
            },
            "task_priority": {
                "title": "TaskPriority",
                "properties": {
                    "priority": {
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            "Clear",
                            "Low",
                            "Medium",
                            "High",
                            "Urgent"
                        ]
                    }
                },
                "type": "object"
            },
            "task_status": {
                "title": "TaskStatus",
                "properties": {
                    "status": {
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            "Open",
                            "InProgress",
                            "Delayed",
                            "Complete",
                            "Cancelled"
                        ]
                    }
                },
                "type": "object"
            },
            "task_post_body": {
                "required": [
                    "title",
                    "assignee",
                    "description",
                    "due_date",
                    "location",
                    "priority",
                    "status"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "assignee": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "location": {
                        "properties": {
                            "latitude": {
                                "type": "string",
                                "maximum": "90",
                                "minimum": "-90"
                            },
                            "longitude": {
                                "type": "string",
                                "maximum": "180",
                                "minimum": "-180"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "priority": {
                        "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "status": {
                        "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "task_patch_body": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "location": {
                        "properties": {
                            "latitude": {
                                "type": "string",
                                "maximum": "90",
                                "minimum": "-90"
                            },
                            "longitude": {
                                "type": "string",
                                "maximum": "180",
                                "minimum": "-180"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "priority": {
                        "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "status": {
                        "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "comment_patch_body": {
                "title": "Comment",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "authorization": {
                "type": "string"
            },
            "error": {
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "errors": {
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                },
                "type": "object"
            },
            "citizen": {
                "title": "Citizen",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "tcno": {
                                "type": "string",
                                "maxLength": 11,
                                "minLength": 11
                            },
                            "firstname": {
                                "type": "string",
                                "nullable": true
                            },
                            "lastname": {
                                "type": "string",
                                "nullable": true
                            },
                            "gender": {
                                "description": "`1 = Female`, `2 = Male`",
                                "type": "integer",
                                "nullable": true
                            },
                            "address": {
                                "type": "string",
                                "nullable": true
                            },
                            "phone": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "corporation": {
                "title": "Corporation",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "tax_number": {
                                "type": "string",
                                "maxLength": 11,
                                "minLength": 10
                            },
                            "tax_office": {
                                "type": "string",
                                "nullable": true
                            },
                            "title": {
                                "type": "string",
                                "nullable": true
                            },
                            "address": {
                                "type": "string",
                                "nullable": true
                            },
                            "phone": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "department_basic": {
                "title": "Department",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "department": {
                "title": "Department",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "parent_department": {
                                "type": "string",
                                "nullable": true
                            },
                            "director": {
                                "type": "string",
                                "nullable": true
                            },
                            "director_allowed_parent_depth": {
                                "type": "integer"
                            },
                            "director_allowed_child_depth": {
                                "type": "integer"
                            },
                            "member_allowed_parent_depth": {
                                "type": "integer"
                            },
                            "member_allowed_child_depth": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "director": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "personnel_basic": {
                "title": "Personnel Basic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "image_uri": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "firstname": {
                                "type": "string"
                            },
                            "lastname": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "personnel": {
                "title": "Personnel",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "role_id": {
                                "type": "integer",
                                "minimum": 1,
                                "nullable": true
                            },
                            "department_id": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "image_id": {
                                "type": "string",
                                "nullable": true
                            },
                            "is_active": {
                                "type": "boolean"
                            },
                            "firstname": {
                                "type": "string"
                            },
                            "lastname": {
                                "type": "string"
                            },
                            "tcno": {
                                "type": "string",
                                "maxLength": 11,
                                "minLength": 11,
                                "pattern": "^[0-9]$"
                            },
                            "gender": {
                                "type": "string",
                                "enum": [
                                    "female",
                                    "male"
                                ]
                            },
                            "phone": {
                                "type": "string",
                                "format": "phone"
                            },
                            "email": {
                                "type": "string",
                                "format": "email"
                            },
                            "date_added": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_modification": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_citizen_gender": {
                "title": "Gender",
                "description": "`1 = Female`, `2 = Male`",
                "type": "integer",
                "enum": [
                    "1",
                    "2"
                ]
            },
            "polling_citizen": {
                "title": "Citizen (Polling)",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "polling_citizen"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "tcno": {
                                "type": "string"
                            },
                            "firstname": {
                                "type": "string"
                            },
                            "lastname": {
                                "type": "string"
                            },
                            "gender": {
                                "$ref": "#/components/schemas/polling_citizen_gender"
                            },
                            "gender_str": {
                                "description": "human readable gender description",
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "message": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_message"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_direct_message_post_body": {
                "title": "DirectMessage",
                "type": "object",
                "oneOf": [
                    {
                        "property": "custom_message",
                        "description": "send a custom message",
                        "properties": {
                            "citizen_id": {
                                "type": "string"
                            },
                            "message": {
                                "description": "send a custom message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "templated_message",
                        "description": "send a templated message",
                        "properties": {
                            "citizen_id": {
                                "type": "string"
                            },
                            "template_id": {
                                "description": "send a templated message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "polling_pending_direct_message": {
                "title": "Message",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "content": {
                                "type": "string"
                            },
                            "status": {
                                "description": "always 1 (`Pending`)",
                                "type": "integer"
                            },
                            "processed_on": {
                                "description": "always null",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "status_str": {
                                "description": "human readable status description",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_failed_direct_message": {
                "title": "Message",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "content": {
                                "type": "string"
                            },
                            "status": {
                                "description": "always 3 (`Failed`)",
                                "type": "integer"
                            },
                            "processed_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status_str": {
                                "description": "human readable status description",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "message_error": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_message_error"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_filter": {
                "title": "Filter",
                "description": "filter examples:\n *    all\n *    (age_gt_20_or_gender_eq_1)and_district_eq_55\n *    age_lt_30_and((age_gt_20_or_gender_eq_1)and_district_eq_55_or((district_eq_asdd)_and_street_eee_qwe))_or_label_eq_testlabel_and_someprop_eq_somevalue\n *    age_lt_30_and((age_gt_20_or_gender_eq_1)and_district_eq_55_and(name_eq_www)or((district_eq_multi word district)_and_street_eq_qwe)and(multi_word_property_eq_multi word val))_or_label_eq_testlabel_and_someprop_eq_somevalue\n *   ",
                "type": "string"
            },
            "polling_filter_template_post_body": {
                "title": "FilterTemplate",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/polling_filter"
                    }
                },
                "type": "object"
            },
            "polling_filter_template": {
                "title": "FilterTemplate",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "filter_template"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_used_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_message_status": {
                "title": "Status",
                "description": "`1 = Pending`, `2 = Successful`, `3 = Failed`",
                "type": "integer",
                "enum": [
                    1,
                    2,
                    3
                ]
            },
            "polling_message": {
                "title": "Message",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "content": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#/components/schemas/polling_message_status"
                            },
                            "processed_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status_str": {
                                "description": "human readable status description",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "queue": {
                                "description": "null if message is not associated with any queue (a direct message)",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/polling_queue"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "message_error": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/polling_message_error"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_message_error": {
                "title": "MessageError",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "message_error"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "error": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_message_template_post_body": {
                "title": "MessageTemplate",
                "properties": {
                    "content": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "polling_message_template": {
                "title": "MessageTemplate",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "message_template"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "content": {
                                "type": "string"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_used_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "polling_queue_post_body": {
                "title": "Queue",
                "type": "object",
                "oneOf": [
                    {
                        "property": "custom_message_custom_filter",
                        "description": "send a custom message using a custom filter",
                        "properties": {
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            },
                            "message": {
                                "description": "send a custom message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "templated_message_custom_filter",
                        "description": "send a templated message using a custom filter",
                        "properties": {
                            "filter": {
                                "$ref": "#/components/schemas/polling_filter"
                            },
                            "message_template_id": {
                                "description": "send a templated message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "custom_message_templated_filter",
                        "description": "send a custom message using templated filter",
                        "properties": {
                            "filter_template_id": {
                                "description": "use a templated filter",
                                "type": "string"
                            },
                            "message": {
                                "description": "send a custom message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "property": "templated_message_templated_filter",
                        "description": "send a templated message using templated filter",
                        "properties": {
                            "filter_template_id": {
                                "description": "use a templated filter",
                                "type": "string"
                            },
                            "message_template_id": {
                                "description": "send a templated message",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "polling_queue": {
                "title": "Queue",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "queue"
                        ]
                    },
                    "attributes": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_on": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "total": {
                                "description": "number of citizens in the queue both processed and not yet processed",
                                "type": "integer"
                            },
                            "processed": {
                                "description": "number of processed citizens",
                                "type": "integer"
                            },
                            "queued": {
                                "description": "number of citizens not yet processed",
                                "type": "integer"
                            },
                            "successful": {
                                "description": "number of successful messages",
                                "type": "integer"
                            },
                            "failed": {
                                "description": "number of failed messages",
                                "type": "integer"
                            },
                            "success_rate": {
                                "description": "number of processed citizens divided by number of successful messages (successful / processed), null if total is 0",
                                "type": "number",
                                "nullable": true
                            },
                            "completion_rate": {
                                "description": "number of total citizens divided by number of processed messages (processed / total), null if total is 0",
                                "type": "number",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "application": {
                "title": "Application",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "form_data": {
                                "type": "string",
                                "format": "json"
                            },
                            "applied_on": {
                                "type": "string",
                                "format": "date"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "applicant": {
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/citizen"
                                            },
                                            {
                                                "$ref": "#/components/schemas/corporation"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "step_attachment": {
                "title": "attachment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "extension": {
                                "type": "string",
                                "nullable": true
                            },
                            "uri": {
                                "description": "Direct access URI",
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "uploader": {
                                "description": "NULL if attachment was added by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": "true"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "procedure_category": {
                "title": "Category",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "container_type": {
                                "$ref": "#/components/schemas/container_type"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "active": {
                                "type": "integer"
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "choice_type": {
                "description": "`Transition = 1`, `Success = 2`, `Failure = 3`",
                "type": "integer"
            },
            "step_choice": {
                "title": "Choice",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/choice_type"
                            },
                            "number": {
                                "type": "integer"
                            },
                            "wait_for_days": {
                                "type": "integer",
                                "nullable": true
                            },
                            "remaining_days": {
                                "description": "How many days more must pass before this choice can be choosen. null if wait_for_days is null. 0 if step is complete. wait_for_days if step is not yet activated.",
                                "type": "integer",
                                "nullable": true
                            },
                            "is_selected": {
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "next_step": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/step"
                                    }
                                },
                                "type": "object"
                            },
                            "subprocedure": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/subprocedure"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "step_comment": {
                "title": "Comment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "commented_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "commentator": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "container_type": {
                "description": "`1 = Structure`, `2 = Parcel`",
                "type": "integer"
            },
            "container": {
                "title": "Container",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/container_type"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "procedure": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/procedure"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "procedure_structure": {
                "title": "Structure",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ada": {
                                "type": "string",
                                "nullable": true
                            },
                            "pafta": {
                                "type": "string",
                                "nullable": true
                            },
                            "parsel": {
                                "type": "string",
                                "nullable": true
                            },
                            "blok_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "yol_alti_kat_sayisi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "yol_ustu_kat_sayisi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bina_durum": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bina_durum_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "bina_yapi_tipi": {
                                "type": "string",
                                "nullable": true
                            },
                            "bina_yapi_tipi_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "site_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "posta_kodu": {
                                "type": "integer",
                                "nullable": true
                            },
                            "csbm_kodu": {
                                "type": "integer",
                                "nullable": true
                            },
                            "kod": {
                                "type": "integer",
                                "nullable": true
                            },
                            "es_bina_kimlik_no": {
                                "type": "integer",
                                "nullable": true
                            },
                            "es_bina_kodu": {
                                "type": "integer",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "properties": {
                                                    "geometry": {
                                                        "type": "string",
                                                        "format": "WKT"
                                                    },
                                                    "type": {
                                                        "$ref": "#/components/schemas/feature_type"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "procedure_event": {
                "title": "Event",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "type": {
                                "description": "`Advanced = 1`, `SubprocedureAdvanced = 2`, `DescriptionChanged = 3`, `Commented = 4`, `AttachmentAttached = 5`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "occurred_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "data": {
                                "description": "\n  *     Depending on the event type, this object will contain following properties: \n  *     `type == 1` => `{ old_step: string (title), new_step: string (title) (null if new step is null) }`,\n  *     `type == 2` => `{ subprocedure: string (title), old_step: string (title), new_step: string (title) (null if new step is null) }`,\n  *     `type == 3` => `{ old_description: string (first 128 characters), new_description: (first 128 characters) }`,\n  *     `type == 4` => `{ step: string (title), comment: string (message) (first 128 characters) }`,\n  *     `type == 5` => `{ step: string (title), attachment: string (name) }`\n  *    ",
                                "type": "object",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "enabler": {
                                "description": "NULL if event was triggered by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "procedure_type": {
                "description": "\n *    `(Numarataj) Numbering = 1`\n *   `(Yapı Ruhsatı) BuildingPermit = 2`\n *   `(İnşaat İstikamet Rölevesi) ConstructionDirectionSurveying = 3`\n *   `(Kot Kesit Rölevesi) ElevationProfileSurveying = 4`\n *   `(Yola Terk) Expropriation = 5`\n *   `(İfraz) Parcelling = 6`\n *   `(Tevhit) Amalgamation = 7`\n *   `(Ecrimisil) OccupationCompensationByManagement = 8`\n *   `(Ecrimisil - Vatandaş) OccupationCompensationByCitizen = 9`\n *   `(1/5000 Ölçekli Plan Değişimi) PlanChange1to5000Internal = 10`\n *   `(1/5000 Ölçekli Plan Değişimi - Vatandaş) PlanChange1to5000External = 11`\n *   `(Yıkım Ruhsatı) DeconstructionPermit = 12`\n *   `(Avan Proje) PreliminaryDesign = 13`\n *   `(Yazılı İmar Durumu) WrittenZoningStatus = 14`\n *   `Riskli Yapı = 15`\n *   `Kira Yardımı (Mal Sahibi) = 16`\n *   `Kira Yardımı (Kiracı) = 17`\n *   `Test = 18`",
                "type": "integer"
            },
            "procedure_type_parcel": {
                "description": "\n *    `(Numarataj) Numbering = 1`\n *   `(Yapı Ruhsatı) BuildingPermit = 2`\n *   `(İnşaat İstikamet Rölevesi) ConstructionDirectionSurveying = 3`\n *   `(Kot Kesit Rölevesi) ElevationProfileSurveying = 4`\n *   `(Yola Terk) Expropriation = 5`\n *   `(İfraz) Parcelling = 6`\n *   `(Tevhit) Amalgamation = 7`\n *   `(Ecrimisil) OccupationCompensationByManagement = 8`\n *   `(Ecrimisil - Vatandaş) OccupationCompensationByCitizen = 9`\n *   `(1/5000 Ölçekli Plan Değişimi) PlanChange1to5000Internal = 10`\n *   `(1/5000 Ölçekli Plan Değişimi - Vatandaş) PlanChange1to5000External = 11`\n *   `(Avan Proje) PreliminaryDesign = 13`\n *   `(Yazılı İmar Durumu) WrittenZoningStatus = 14`\n *   `Test = 18`",
                "type": "integer"
            },
            "procedure_type_structure": {
                "description": "\n *    `(Yıkım Ruhsatı) DeconstructionPermit = 12`\n *    `Riskli Yapı = 15`\n *    `Kira Yardımı (Mal Sahibi) = 16`\n *    `Kira Yardımı (Kiracı) = 17`\n *    `Test = 18`",
                "type": "integer"
            },
            "procedure": {
                "title": "Procedure",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "current_step": {
                                "type": "string",
                                "nullable": true
                            },
                            "due_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "type": {
                                "$ref": "#/components/schemas/procedure_type"
                            },
                            "is_complete": {
                                "type": "boolean"
                            },
                            "completed_on": {
                                "description": "null if procedure is not yet complete",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "date_created": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "subprocedure": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/subprocedure"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "step": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/step"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/procedure_event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "structure": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/procedure_structure"
                                    }
                                },
                                "type": "object"
                            },
                            "application": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/application"
                                    }
                                },
                                "type": "object"
                            },
                            "department": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/department"
                                    }
                                },
                                "type": "object"
                            },
                            "started_by": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            },
                            "completed_by": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "step_trigger": {
                "title": "Trigger",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "description": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "step": {
                "title": "Step",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "out_of_scope": {
                                "type": "boolean"
                            },
                            "is_complete": {
                                "type": "boolean"
                            },
                            "completed_on": {
                                "description": "null if step is not yet complete",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "activated_on": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "due_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "choice": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/step_choice"
                                        }
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "trigger": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/step_trigger"
                                        }
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/step_comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/step_attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "completed_by": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "subprocedure": {
                "title": "Subprocedure",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "current_step": {
                                "type": "string",
                                "nullable": true
                            },
                            "is_active": {
                                "type": "boolean"
                            },
                            "is_complete": {
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "step": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/step"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure_attachment": {
                "title": "attachment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "extension": {
                                "type": "string",
                                "nullable": true
                            },
                            "uri": {
                                "description": "Direct access URI",
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "uploader": {
                                "description": "NULL if attachment was added by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": "true"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "block": {
                "title": "Block",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "parcel": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/parcel"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "csbm": {
                "title": "CSBM",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ad": {
                                "type": "string",
                                "nullable": true
                            },
                            "csbm_tur": {
                                "type": "integer",
                                "nullable": true
                            },
                            "csbm_tur_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "csbm_gelismislik_tur": {
                                "type": "integer",
                                "nullable": true
                            },
                            "csbm_gelismislik_tur_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "sabit_tanitim_numarasi": {
                                "type": "number",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "numbering": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/numbering"
                                    }
                                },
                                "type": "object"
                            },
                            "district": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/district"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "csbm_public": {
                "title": "CSBMPublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ad": {
                                "type": "string",
                                "nullable": true
                            },
                            "csbm_tur": {
                                "type": "integer",
                                "nullable": true
                            },
                            "csbm_tur_str": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure_comment": {
                "title": "Comment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "commented_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "commentator": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "custom_feature": {
                "title": "CustomFeature",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "image": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "updated_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "variation": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/custom_feature_variation"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "custom_feature_category": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/custom_feature_category"
                                    }
                                },
                                "type": "object"
                            },
                            "created_by": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            },
                            "last_update_by": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/custom_feature_attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "custom_feature_attachment": {
                "title": "attachment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "extension": {
                                "type": "string",
                                "nullable": true
                            },
                            "uri": {
                                "description": "Direct access URI",
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "uploader": {
                                "description": "NULL if attachment was added by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": "true"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "custom_feature_category": {
                "title": "CustomFeatureCategory",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "meta": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "department": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/department_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "custom_feature_category_public": {
                "title": "CustomFeatureCategoryPublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "meta": {
                        "properties": {
                            "count": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "custom_feature_public": {
                "title": "CustomFeaturePublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "image": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "custom_feature_category": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/custom_feature_category_public"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "custom_feature_variation": {
                "title": "CustomFeatureVariation",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "image": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                            },
                            "created_on": {
                                "type": "datetime",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "personnel": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "district": {
                "title": "District",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ad": {
                                "type": "string",
                                "nullable": true
                            },
                            "mahalle_tip": {
                                "type": "integer",
                                "nullable": true
                            },
                            "mahalle_tip_str": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "csbm": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/csbm"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "district_public": {
                "title": "DistrictPublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ad": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "csbm": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/csbm"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "document": {
                "title": "Document",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "uri": {
                                "type": "string",
                                "format": "uri"
                            },
                            "yapi_belge_tip": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "document_brief": {
                "title": "DocumentBrief",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "kurum_kimlik_no": {
                                "type": "string"
                            },
                            "onay_kod": {
                                "type": "string",
                                "nullable": true
                            },
                            "riskli_alan": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "sistem_onay_tarih": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "yapi_belge_durum_kod": {
                                "type": "integer",
                                "nullable": true
                            },
                            "yapi_belge_durum_aciklama": {
                                "type": "string",
                                "nullable": true
                            },
                            "yapi_belge_tip_kod": {
                                "type": "integer",
                                "nullable": true
                            },
                            "yapi_belge_tip_aciklama": {
                                "type": "string",
                                "nullable": true
                            },
                            "yapi_koordinat": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "details": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/document"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "feature_type": {
                "type": "string",
                "enum": [
                    "parcel",
                    "structure",
                    "numbering",
                    "district",
                    "road",
                    "poi",
                    "custom"
                ]
            },
            "feature": {
                "title": "Feature",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "geometry": {
                                "type": "string",
                                "format": "GeoJSON"
                            },
                            "type": {
                                "$ref": "#/components/schemas/feature_type"
                            },
                            "area": {
                                "type": "number",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "parcel": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/parcel"
                                    }
                                },
                                "type": "object"
                            },
                            "structure": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/structure"
                                    }
                                },
                                "type": "object"
                            },
                            "numbering": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/numbering"
                                    }
                                },
                                "type": "object"
                            },
                            "district": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/district"
                                    }
                                },
                                "type": "object"
                            },
                            "road": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/road"
                                    }
                                },
                                "type": "object"
                            },
                            "custom_feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/custom_feature"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "feature_public_type": {
                "type": "string",
                "enum": [
                    "structure",
                    "numbering",
                    "district",
                    "road",
                    "poi"
                ]
            },
            "feature_public": {
                "title": "Feature",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "geometry": {
                                "type": "string",
                                "format": "GeoJSON"
                            },
                            "type": {
                                "$ref": "#/components/schemas/feature_public_type"
                            },
                            "area": {
                                "type": "number",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "parcel": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/parcel_public"
                                    }
                                },
                                "type": "object"
                            },
                            "structure": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/structure"
                                    }
                                },
                                "type": "object"
                            },
                            "numbering": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/numbering"
                                    }
                                },
                                "type": "object"
                            },
                            "district": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/district"
                                    }
                                },
                                "type": "object"
                            },
                            "road": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/road"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "independent_section": {
                "title": "IndependentSection",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ic_kapi_no": {
                                "type": "string",
                                "nullable": true
                            },
                            "kat_no": {
                                "type": "string",
                                "nullable": true
                            },
                            "bagimsiz_bolum_tipi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bagimsiz_bolum_tipi_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "bagimsiz_bolum_durum": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bagimsiz_bolum_durum_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "yapi_kullanim_amac": {
                                "type": "integer",
                                "nullable": true
                            },
                            "yapi_kullanim_amac_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "kod": {
                                "type": "integer",
                                "nullable": true
                            },
                            "tapu_bagimsiz_bolum_no": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "inhabitant": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/inhabitant"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "numbering": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/numbering"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "independent_section_public": {
                "title": "IndependentSectionPublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ic_kapi_no": {
                                "type": "string",
                                "nullable": true
                            },
                            "kat_no": {
                                "type": "string",
                                "nullable": true
                            },
                            "bagimsiz_bolum_tipi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bagimsiz_bolum_tipi_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "bagimsiz_bolum_durum": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bagimsiz_bolum_durum_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "yapi_kullanim_amac": {
                                "type": "integer",
                                "nullable": true
                            },
                            "yapi_kullanim_amac_str": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "numbering": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/numbering_public"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "inhabitant": {
                "title": "Inhabitant",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "tcno": {
                                "type": "string",
                                "nullable": true
                            },
                            "ad": {
                                "type": "string",
                                "nullable": true
                            },
                            "soyad": {
                                "type": "string",
                                "nullable": true
                            },
                            "cinsiyet": {
                                "type": "integer",
                                "nullable": true
                            },
                            "cinsiyet_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "dogum_tarihi": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "independent_section": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/independent_section"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "numbering": {
                "title": "Numbering",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "numarataj_tipi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "numarataj_tipi_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "dis_kapi_no": {
                                "type": "string",
                                "nullable": true
                            },
                            "bagimsiz_bolum_sayisi": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "structure": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/structure"
                                    }
                                },
                                "type": "object"
                            },
                            "independent_section": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/independent_section"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "numbering_public": {
                "title": "NumberingPublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "numarataj_tipi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "numarataj_tipi_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "dis_kapi_no": {
                                "type": "string",
                                "nullable": true
                            },
                            "bagimsiz_bolum_sayisi": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "structure": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/structure_basic"
                                    }
                                },
                                "type": "object"
                            },
                            "independent_section": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/independent_section_public"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "poi_saglik": {
                "title": "saglik",
                "properties": {
                    "alt_kategori": {
                        "type": "string",
                        "nullable": true
                    },
                    "ad": {
                        "type": "string",
                        "nullable": true
                    },
                    "adres": {
                        "type": "string",
                        "nullable": true
                    },
                    "telefon": {
                        "type": "string",
                        "nullable": true
                    },
                    "web_sitesi": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "acil_servis": {
                        "type": "string",
                        "nullable": true
                    },
                    "yatak": {
                        "type": "integer",
                        "nullable": true
                    },
                    "ambulans": {
                        "type": "string",
                        "nullable": true
                    },
                    "mahalle": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "poi_eczane": {
                "title": "eczane",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "poi_type": {
                "type": "string",
                "enum": [
                    "saglik",
                    "eczane"
                ]
            },
            "poi": {
                "title": "POI",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/poi_type"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "details": {
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/poi_saglik"
                                            },
                                            {
                                                "$ref": "#/components/schemas/poi_eczane"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "parcel": {
                "title": "Parcel",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ada": {
                                "type": "string",
                                "nullable": true
                            },
                            "pafta": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "yapi": {
                                "type": "integer"
                            },
                            "yapi_mesken": {
                                "type": "integer"
                            },
                            "yapi_ticari": {
                                "type": "integer"
                            },
                            "yapi_kamu": {
                                "type": "integer"
                            },
                            "yapi_diger": {
                                "type": "integer"
                            },
                            "yapi_riskli": {
                                "type": "integer"
                            },
                            "numarataj": {
                                "type": "integer"
                            },
                            "bagimsiz_bolum": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "district": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/district"
                                    }
                                },
                                "type": "object"
                            },
                            "structure": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/structure"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "tag": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/parcel_tag"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/parcel_comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "procedure": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/structure_procedure"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "task": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/task"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "parcel_comment": {
                "title": "Comment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "commented_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "commentator": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "parcel_public": {
                "title": "ParcelPublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ada": {
                                "type": "string",
                                "nullable": true
                            },
                            "pafta": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "yapi": {
                                "type": "integer"
                            },
                            "yapi_mesken": {
                                "type": "integer"
                            },
                            "yapi_ticari": {
                                "type": "integer"
                            },
                            "yapi_kamu": {
                                "type": "integer"
                            },
                            "yapi_diger": {
                                "type": "integer"
                            },
                            "numarataj": {
                                "type": "integer"
                            },
                            "bagimsiz_bolum": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "district": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/district_public"
                                    }
                                },
                                "type": "object"
                            },
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "structure": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/structure_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "parcel_tag_type": {
                "description": "Use dot as delimiter to specify subtags. ex: `imar_plani_surecinde`, `imar_plani_surecinde.hazirlik_asamasinda`, `belediye_mulku.kiraya_verilen.bina`. All possible values are as follows:\n *   \n \t\t[\n\t\t\t'imar_plani_surecinde' => [\n\t\t\t\t'hazirlik_asamasinda',\n\t\t\t\t'kurum_gorusu_asamasinda',\n\t\t\t\t'meclis_karari_asamasinda',\n\t\t\t\t'onay_dagitim_asamasinda',\n\t\t\t\t'aski_ilan_asamasinda',\n\t\t\t\t'itiraz_surecinde',\n\t\t\t\t'dava_surecinde'\n\t\t\t],\n\t\t\t'yeni_yapi' => [\n\t\t\t\t'on_proje_asamasinda',\n\t\t\t\t'ruhsat_asamasinda',\n\t\t\t\t'yapim_asamasinda',\n\t\t\t\t'iskan_asamasinda'\n\t\t\t],\n\t\t\t'riskli_yapi' => [\n\t\t\t\t'1999_deprem_hasarli',\n\t\t\t\t'2000_deprem_hasarli',\n\t\t\t\t'resen_islem_yapilan',\n\t\t\t\t'ilgililerince_islem_yapilan',\n\t\t\t\t'tahliye_edilip_yikilan'\n\t\t\t],\n\t\t\t'belediye_mulku' => [\n\t\t\t\t'belediyece_kullanilan' => [\n\t\t\t\t\t'bina',\n\t\t\t\t\t'arsa'\n\t\t\t\t],\n\t\t\t\t'kiraya_verilen' => [\n\t\t\t\t\t'bina',\n\t\t\t\t\t'arsa'\n\t\t\t\t],\n\t\t\t\t'tahsis_edilen' => [\n\t\t\t\t\t'bina',\n\t\t\t\t\t'arsa'\n\t\t\t\t]\n\t\t\t],\n\t\t\t'ecrimisil' => [],\n\t\t\t'belediyeye_tahsis_edilen_mulk' => [\n\t\t\t\t'bina',\n\t\t\t\t'arsa'\n\t\t\t],\n\t\t\t'belediyeye_kiralanan_mulk' => [\n\t\t\t\t'bina',\n\t\t\t\t'arsa'\n\t\t\t],\n\t\t\t'kamulastirmaya_konu_mulk' => [],\n\t\t\t'hasarli_bina' => [\n\t\t\t\t'bosaltilan' => [],\n\t\t\t\t'bosaltilamayan' => [],\n\t\t\t\t'deprem_1999' => []\n\t\t\t]\n\t\t\t]",
                "type": "integer"
            },
            "parcel_tag": {
                "title": "Tag",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/parcel_tag_type"
                            },
                            "tag": {
                                "type": "string"
                            },
                            "tagged_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "parcel": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/parcel"
                                    }
                                },
                                "type": "object"
                            },
                            "tagged_by": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure_plan": {
                "title": "Plan",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "plan_notu": {
                                "type": "string",
                                "nullable": true
                            },
                            "objectid": {
                                "type": "string",
                                "nullable": true
                            },
                            "uvfd_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "tur": {
                                "type": "string",
                                "nullable": true
                            },
                            "meriyet": {
                                "type": "string",
                                "nullable": true
                            },
                            "tasdik_tarihi": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "tadilat_kodu": {
                                "type": "string",
                                "nullable": true
                            },
                            "tadilat_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "lejand_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "plan_kodu": {
                                "type": "string",
                                "nullable": true
                            },
                            "plan_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "uvfd": {
                                "type": "string",
                                "nullable": true
                            },
                            "ana_fonksiyon": {
                                "type": "string",
                                "nullable": true
                            },
                            "alt_fonksiyon": {
                                "type": "string",
                                "nullable": true
                            },
                            "arazi_kullanimi": {
                                "type": "string",
                                "nullable": true
                            },
                            "yancekme": {
                                "type": "string",
                                "nullable": true
                            },
                            "min_taks": {
                                "type": "string",
                                "nullable": true
                            },
                            "maks_taks": {
                                "type": "string",
                                "nullable": true
                            },
                            "kaks": {
                                "type": "string",
                                "nullable": true
                            },
                            "emsal": {
                                "type": "string",
                                "nullable": true
                            },
                            "arkacekme": {
                                "type": "string",
                                "nullable": true
                            },
                            "hmax": {
                                "type": "string",
                                "nullable": true
                            },
                            "yapiduzeni": {
                                "type": "string",
                                "nullable": true
                            },
                            "oncekme": {
                                "type": "string",
                                "nullable": true
                            },
                            "kat_adedi": {
                                "type": "string",
                                "nullable": true
                            },
                            "aciklama": {
                                "type": "string",
                                "nullable": true
                            },
                            "globalid": {
                                "type": "string",
                                "nullable": true
                            },
                            "plan_id": {
                                "type": "string",
                                "nullable": true
                            },
                            "created_user": {
                                "type": "string",
                                "nullable": true
                            },
                            "created_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "last_edited_user": {
                                "type": "string",
                                "nullable": true
                            },
                            "last_edited_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure_plan_public": {
                "title": "PlanPublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "yancekme": {
                                "type": "string",
                                "nullable": true
                            },
                            "min_taks": {
                                "type": "string",
                                "nullable": true
                            },
                            "maks_taks": {
                                "type": "string",
                                "nullable": true
                            },
                            "kaks": {
                                "type": "string",
                                "nullable": true
                            },
                            "emsal": {
                                "type": "string",
                                "nullable": true
                            },
                            "arkacekme": {
                                "type": "string",
                                "nullable": true
                            },
                            "hmax": {
                                "type": "string",
                                "nullable": true
                            },
                            "oncekme": {
                                "type": "string",
                                "nullable": true
                            },
                            "kat_adedi": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "road": {
                "title": "Road",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ad": {
                                "type": "string",
                                "nullable": true
                            },
                            "tip": {
                                "type": "string",
                                "nullable": true
                            },
                            "olcek": {
                                "type": "string",
                                "nullable": true
                            },
                            "olusum_yontemi": {
                                "type": "string",
                                "nullable": true
                            },
                            "yol_kimlik_no": {
                                "type": "integer",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "road_public": {
                "title": "RoadPublic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ad": {
                                "type": "string",
                                "nullable": true
                            },
                            "tip": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure": {
                "title": "Structure",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ada": {
                                "type": "string",
                                "nullable": true
                            },
                            "pafta": {
                                "type": "string",
                                "nullable": true
                            },
                            "parsel": {
                                "type": "string",
                                "nullable": true
                            },
                            "blok_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "yol_alti_kat_sayisi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "yol_ustu_kat_sayisi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bina_durum": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bina_durum_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "bina_yapi_tipi": {
                                "type": "string",
                                "nullable": true
                            },
                            "bina_yapi_tipi_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "site_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "posta_kodu": {
                                "type": "integer",
                                "nullable": true
                            },
                            "csbm_kodu": {
                                "type": "integer",
                                "nullable": true
                            },
                            "kod": {
                                "type": "integer",
                                "nullable": true
                            },
                            "es_bina_kimlik_no": {
                                "type": "integer",
                                "nullable": true
                            },
                            "es_bina_kodu": {
                                "type": "integer",
                                "nullable": true
                            },
                            "acik_adres": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "numarataj": {
                                "type": "integer"
                            },
                            "bagimsiz_bolum": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "csbm": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/csbm"
                                    }
                                },
                                "type": "object"
                            },
                            "parcel": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/parcel"
                                    }
                                },
                                "type": "object"
                            },
                            "numbering": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/numbering"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "tag": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/structure_tag"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/structure_comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/structure_attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "procedure": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/structure_procedure"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "task": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/task"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "plan": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/structure_plan"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "image": {
                                "properties": {
                                    "data": {
                                        "type": "string",
                                        "format": "base64"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure_image": {
                "title": "StructureImage",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "base64": {
                                "type": "string",
                                "format": "base64"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure_procedure": {
                "title": "Procedure",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "current_step": {
                                "type": "string",
                                "nullable": true
                            },
                            "type": {
                                "$ref": "#/components/schemas/procedure_type"
                            },
                            "is_complete": {
                                "type": "boolean"
                            },
                            "date_created": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "step": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "title": {
                                                    "type": "string"
                                                },
                                                "out_of_scope": {
                                                    "type": "boolean"
                                                },
                                                "is_complete": {
                                                    "type": "boolean"
                                                },
                                                "activated_on": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure_basic": {
                "title": "StructureBasic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "ada": {
                                "type": "string",
                                "nullable": true
                            },
                            "pafta": {
                                "type": "string",
                                "nullable": true
                            },
                            "parsel": {
                                "type": "string",
                                "nullable": true
                            },
                            "blok_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "kat_sayisi": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bina_yapi_tipi": {
                                "type": "string",
                                "nullable": true
                            },
                            "bina_yapi_tipi_str": {
                                "type": "string",
                                "nullable": true
                            },
                            "site_adi": {
                                "type": "string",
                                "nullable": true
                            },
                            "acik_adres": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "numarataj": {
                                "type": "integer"
                            },
                            "bagimsiz_bolum": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "feature": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/feature"
                                    }
                                },
                                "type": "object"
                            },
                            "parcel": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/parcel_public"
                                    }
                                },
                                "type": "object"
                            },
                            "plan": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/structure_plan_public"
                                    }
                                },
                                "type": "object"
                            },
                            "image": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/structure_image"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "structure_tag_type": {
                "description": "`1 = Riskli Yapı`",
                "type": "integer"
            },
            "structure_tag": {
                "title": "Tag",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "type": {
                                "$ref": "#/components/schemas/structure_tag_type"
                            },
                            "name": {
                                "type": "string"
                            },
                            "tagged_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "structure": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/structure"
                                    }
                                },
                                "type": "object"
                            },
                            "tagged_by": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "attachment": {
                "title": "attachment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "extension": {
                                "type": "string",
                                "nullable": true
                            },
                            "uri": {
                                "description": "Direct access URI",
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "uploader": {
                                "description": "NULL if attachment was added by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": "true"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "comment": {
                "title": "Comment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "commented_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "commentator": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "event": {
                "title": "Event",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "type": {
                                "description": "`StatusChanged = 1`, `TitleChanged = 2`, `Assigned = 3`, `Deassigned = 4`, `DescriptionUpdated = 5`, `DueDateChanged = 6`, `SubtaskCreated = 7`, `SubtaskRemoved = 8`, `PriorityChanged = 10`, `LocationChanged = 11`, `AttachmentAttached = 12`, `AttachmentRemoved = 13`, `StartDateChanged = 14`",
                                "type": "integer",
                                "maximum": 14,
                                "minimum": 1
                            },
                            "occurred_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "data": {
                                "description": "\n  *     Depending on the event type, this object will contain following properties: \n  *     `type == 1` => `{ status_old: int, status_new: int }`,\n  *     `type == 2` => `{ title_old: string, title_new: string }`,\n  *     `type == 3` => `{ assignee: int }`,\n  *     `type == 4` => `{ assignee: int }`,\n  *     `type == 5` => `{ description: string }`,\n  *     `type == 6` => `{ due_date_old: string(datetime), due_date_new: string(datetime) }`,\n  *     `type == 7` => `{ title: string }`,\n  *     `type == 8` => `{ title: string }`,\n  *     `type == 10` => `{ priority_old: int, priority_new: int }`,\n  *     `type == 11` => `{ location: { latitude: string, longitude: string } }`,\n  *     `type == 12` => `{ name: string }`,\n  *     `type == 13` => `{ name: string }`,\n  *     `type == 14` => `{ start_date_old: string(datetime), start_date_new: string(datetime) }`\n  *    ",
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "enabler": {
                                "description": "NULL if event was triggered by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "subtask": {
                "title": "Subtask",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "assigner": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string",
                                "nullable": true
                            },
                            "due_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "location": {
                                "properties": {
                                    "latitude": {
                                        "type": "string",
                                        "maximum": "90",
                                        "minimum": "-90"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "maximum": "180",
                                        "minimum": "-180"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "priority": {
                                "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "status": {
                                "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "assignee": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "task": {
                "title": "Task",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "assigner": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string",
                                "nullable": true
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "due_date": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "location": {
                                "properties": {
                                    "latitude": {
                                        "type": "string",
                                        "maximum": "90",
                                        "minimum": "-90"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "maximum": "180",
                                        "minimum": "-180"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "priority": {
                                "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "status": {
                                "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "subtask": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/subtask"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "assignee": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "204": {
                "description": "No Content"
            },
            "400": {
                "description": "BadRequest",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            },
            "401": {
                "description": "Unatuhorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            },
            "404": {
                "description": "NotFound",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            }
        },
        "parameters": {
            "srid": {
                "name": "srid",
                "in": "path",
                "schema": {
                    "type": "string",
                    "default": "4326"
                }
            },
            "feature_id": {
                "name": "feature_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "feature_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "parcel",
                        "parcel.{parcel_include}",
                        "structure",
                        "structure.{structure_include}",
                        "numbering",
                        "numbering.{numbering_include}",
                        "district",
                        "district.{district_include}",
                        "road",
                        "road.{road_include}",
                        "custom_feature",
                        "custom_feature.{custom_feature_include}"
                    ]
                }
            },
            "feature_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "selection",
                        "type"
                    ]
                }
            },
            "phrase": {
                "name": "phrase",
                "in": "path",
                "required": true
            },
            "search_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "{parcel_include}",
                        "{structure_include}",
                        "{csbm_include}",
                        "{district_include}",
                        "{road_include}"
                    ]
                }
            },
            "poi_id": {
                "name": "poi_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "poi_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "details",
                        "feature"
                    ]
                }
            },
            "poi_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "type"
                    ]
                }
            },
            "custom_feature_category_id": {
                "name": "category_name",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "custom_feature_category_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "department"
                    ]
                }
            },
            "custom_feature_category_order_by": {
                "name": "orderby",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "department"
                    ]
                }
            },
            "custom_feature_id": {
                "name": "custom_feature_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "custom_feature_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "variation",
                        "variation.{variation_include}",
                        "category",
                        "category.{category_include}",
                        "created_by",
                        "last_update_by",
                        "attachment",
                        "attachment.{attachment_include}"
                    ]
                }
            },
            "custom_feature_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "category",
                        "title"
                    ]
                }
            },
            "custom_feature_variation_id": {
                "name": "variation_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "custom_feature_variation_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_by"
                    ]
                }
            },
            "district_id": {
                "name": "mahalle_kodu",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "district_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "feature.{feature_include}",
                        "csbm",
                        "csbm.{csbm_include}"
                    ]
                }
            },
            "csbm_id": {
                "name": "csbm_kodu",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "csbm_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "district",
                        "district.{district_include}",
                        "structure",
                        "structure.{structure_include}",
                        "numbering",
                        "numbering.{numbering.include}"
                    ]
                }
            },
            "road_id": {
                "name": "kimlik_no",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "maximum": 99999999,
                    "minimum": 10000000
                }
            },
            "road_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "feature.{feature_include}"
                    ]
                }
            },
            "ada_no": {
                "name": "ada_no",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "parsel_no": {
                "name": "parsel_no",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "parcel_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "feature.{feature_include}",
                        "district",
                        "district.{district_include}",
                        "structure",
                        "structure.{structure_include}",
                        "tag",
                        "tag.{parcel_tag_include}",
                        "comment",
                        "comment.{parcel_comment_include}",
                        "procedure",
                        "procedure.step",
                        "task",
                        "task.subtask",
                        "task.assignee"
                    ]
                }
            },
            "parcel_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "tag[eq]"
                    ]
                }
            },
            "parcel_order_by": {
                "name": "orderby",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "tag"
                    ]
                }
            },
            "structure_id": {
                "name": "structure_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "structure_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "bina_durum",
                        "bina_yapi_tipi",
                        "tag[eq]"
                    ]
                }
            },
            "structure_order_by": {
                "name": "orderby",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "bina_durum",
                        "bina_yapi_tipi",
                        "tag"
                    ]
                }
            },
            "structure_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "feature.{feature.include}",
                        "numbering",
                        "numbering.{numbering_include}",
                        "csbm",
                        "csbm.{csbm_include}",
                        "comment",
                        "comment.{comment_include}",
                        "attachment",
                        "attachment.{attachment_include}",
                        "procedure",
                        "procedure.step",
                        "task",
                        "task.subtask",
                        "task.assignee",
                        "plan"
                    ]
                }
            },
            "numbering_id": {
                "name": "bina_no",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "numbering_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "numarataj_tipi",
                        "dis_kapi_no"
                    ]
                }
            },
            "numbering_order_by": {
                "name": "orderby",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "numarataj_tipi",
                        "dis_kapi_no"
                    ]
                }
            },
            "numbering_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "feature.{feature.include}",
                        "structure",
                        "structure.{structure_include}",
                        "independent_section",
                        "independent_section.{independent_section_include}"
                    ]
                }
            },
            "independent_section_id": {
                "name": "adres_no",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "independent_section_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "ic_kapi_no",
                        "kat_no",
                        "bagimsiz_bolum_tipi",
                        "bagimsiz_bolum_durum",
                        "yapi_kullanim_amac"
                    ]
                }
            },
            "independent_section_order_by": {
                "name": "orderby",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "ic_kapi_no",
                        "kat_no",
                        "bagimsiz_bolum_tipi",
                        "bagimsiz_bolum_durum",
                        "yapi_kullanim_amac"
                    ]
                }
            },
            "independent_section_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "numbering",
                        "numbering.{numbering_include}",
                        "inhabitant"
                    ]
                }
            },
            "inhabitant_id": {
                "name": "inhabitant_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "document_id": {
                "name": "bulten_no",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "document_brief_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "details"
                    ]
                }
            },
            "structure_tag_id": {
                "name": "tag_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "structure_tag_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "structure",
                        "structure.{structure_include}",
                        "tagged_by"
                    ]
                }
            },
            "parcel_tag_id": {
                "name": "tag_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "parcel_tag_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "parcel",
                        "parcel.{parcel_include}",
                        "tagged_by"
                    ]
                }
            },
            "structure_comment_id": {
                "name": "comment_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "structure_comment_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "commentator"
                    ]
                }
            },
            "structure_attachment_id": {
                "name": "attachment_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "structure_attachment_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "uploader"
                    ]
                }
            },
            "structure_procedure_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "is_complete"
                    ]
                }
            },
            "structure_plan_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "tur",
                        "planid",
                        "meriyet",
                        "tasdik_tarihi",
                        "plan_kodu",
                        "uvdf",
                        "last_edited_date",
                        "created_date"
                    ]
                }
            },
            "structure_plan_order_by": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "tur",
                        "planid",
                        "meriyet",
                        "tasdik_tarihi",
                        "plan_kodu",
                        "uvdf",
                        "last_edited_date",
                        "created_date"
                    ]
                }
            },
            "feature_public_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "structure",
                        "structure.{structure_include}",
                        "numbering",
                        "numbering.{numbering_include}",
                        "district",
                        "district.{district_include}",
                        "road",
                        "road.{road_include}"
                    ]
                }
            },
            "custom_feature_public_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "category"
                    ]
                }
            },
            "custom_feature_public_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "category"
                    ]
                }
            },
            "csbm_public_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "district",
                        "district.{district_include}"
                    ]
                }
            },
            "parcel_public_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "feature.{feature_include}",
                        "district",
                        "district.{district_include}",
                        "structure",
                        "structure.{structure_include}"
                    ]
                }
            },
            "structure_public_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "feature.{feature.include}",
                        "numbering",
                        "numbering.{numbering_public_include}",
                        "csbm",
                        "csbm.{csbm_public_include}"
                    ]
                }
            },
            "numbering_public_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "feature",
                        "feature.{feature.include}",
                        "structure",
                        "structure.{structure_public_include}"
                    ]
                }
            },
            "independent_section_include_public": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "numbering",
                        "numbering.{numbering_include}"
                    ]
                }
            },
            "container_id": {
                "name": "container_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "procedure_id": {
                "name": "procedure_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "procedure_order_by": {
                "name": "orderby",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "container_id",
                        "title",
                        "type",
                        "date_created"
                    ]
                }
            },
            "procedure_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "container_id",
                        "title",
                        "type",
                        "date_created",
                        "is_complete"
                    ]
                }
            },
            "procedure_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "application",
                        "application.applicant",
                        "subprocedure",
                        "subprocedure.{subprocedure_include}",
                        "step",
                        "step.{step_include}",
                        "event",
                        "event.{event_include}",
                        "structure",
                        "structure.feature",
                        "department",
                        "started_by",
                        "completed_by"
                    ]
                }
            },
            "procedure_category_filter": {
                "name": "filter",
                "in": "query",
                "description": "`1 = Structure`, `2 = Parcel`",
                "schema": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2"
                    ]
                }
            },
            "subprocedure_id": {
                "name": "subprocedure_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "subprocedure_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "step",
                        "step.{step_include}"
                    ]
                }
            },
            "step_id": {
                "name": "step_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "step_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "choice",
                        "choice.next_step",
                        "choice.next_step.{step_include}",
                        "choice.subprocedure",
                        "choice.subprocedure.{subprocedure_include}",
                        "trigger",
                        "comment",
                        "comment.{comment_include}",
                        "attachment",
                        "attachment.{attachment_include}",
                        "completed_by"
                    ]
                }
            },
            "procedure_event_id": {
                "name": "event_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "procedure_event_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "enabler"
                    ]
                }
            },
            "step_comment_id": {
                "name": "comment_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "step_comment_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "commentator"
                    ]
                }
            },
            "step_attachment_id": {
                "name": "attachment_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "step_attachment_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "uploader"
                    ]
                }
            },
            "application_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "applicant"
                    ]
                }
            },
        "parameters": {
            "task_id": {
                "name": "task_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "subtask_id": {
                "name": "subtask_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "personnel_id": {
                "name": "personnel_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "comment_id": {
                "name": "comment_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "attachment_id": {
                "name": "attachment_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1
                }
            },
            "task_order_by": {
                "name": "orderby",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "id",
                        "due_date",
                        "status",
                        "priority",
                        "date_created",
                        "edited_on"
                    ]
                }
            },
            "task_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "id",
                        "due_date",
                        "status",
                        "priority",
                        "date_created",
                        "edited_on"
                    ]
                }
            },
            "task_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "assignee",
                        "comment",
                        "comment.commentator",
                        "event",
                        "event.enabler",
                        "attachment",
                        "attachment.uploader",
                        "subtask",
                        "subtask.assignee",
                        "subtask.comment",
                        "subtask.comment.commentator",
                        "subtask.event",
                        "subtask.event.enabler",
                        "subtask.attachment",
                        "subtask.attachment.uploader"
                    ]
                }
            },
            "subtask_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "comment",
                        "comment.commentator",
                        "event",
                        "event.enabler",
                        "attachment",
                        "attachment.uploader"
                    ]
                }
            },
            "comment_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "commentator"
                    ]
                }
            },
            "event_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "enabler"
                    ]
                }
            },
            "attachment_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "uploader"
                    ]
                }
            },
            "authorization": {
                "name": "Authorization",
                "in": "header",
                "schema": {
                    "$ref": "#/components/schemas/authorization"
                }
            },
            "polling_citizen_id": {
                "name": "citizen_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_citizen_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "message",
                        "message.{message_include}"
                    ]
                }
            },
            "polling_filter_template_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "polling_filter_template_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "polling_filter_template_id": {
                "name": "filter_template_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_message_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "queue",
                        "message_error"
                    ]
                }
            },
            "polling_message_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "queue_id",
                        "status",
                        "processed_on"
                    ]
                }
            },
            "polling_message_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "queue_id",
                        "status",
                        "processed_on"
                    ]
                }
            },
            "polling_message_id": {
                "name": "message_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_message_template_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "polling_message_template_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "polling_message_template_id": {
                "name": "message_template_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "polling_queue_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "updated_on"
                    ]
                }
            },
            "polling_queue_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "updated_on"
                    ]
                }
            },
            "queue_id": {
                "name": "queue_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        }
    },
    "x-tagGroups": [
        {
            "name": "Task Management",
            "tags": [
                "Task",
                "Subtask",
                "Assignement",
                "Comment",
                "Event",
                "Attachment"
            ]
        },
        {
            "name": "File",
            "tags": [
                "File"
            ]
        },
        {
            "name": "Procedure Management",
            "tags": [
                "Procedure",
                "Subprocedure",
                "Step",
                "Event (Procedure)",
                "Comment (Step)",
                "Attachment (Step)"
            ]
        },
        {
            "name": "GIS",
            "tags": [
                "Stats",
                "Feature",
                "Feature (Public)",
                "Search",
                "Search (Public)",
                "POI",
                "POI (Public)",
                "Custom Feature",
                "Custom Feature (Public)",
                "District",
                "District (Public)",
                "CSBM",
                "CSBM (Public)",
                "Road",
                "Road (Public)",
                "Parcel",
                "Parcel (Public)",
                "Structure",
                "Structure (Public)",
                "Numbering",
                "Numbering (Public)",
                "Independent Section",
                "Independent Section (Public)",
                "Inhabitant",
                "Document",
                "Tag (Structure)",
                "Tag (Parcel)",
                "Comment (Structure)",
                "Comment (Parcel)",
                "Attachment (Structure)",
                "Procedure (Structure)",
                "Procedure (Parcel)",
                "Plan"
            ]
        },
        {
            "name": "Polling",
            "tags": [
                "Queue",
                "DirectMessage",
                "Message",
                "Citizen",
                "MessageTemplate",
                "FilterTemplate"
            ]
        }
    ]
}