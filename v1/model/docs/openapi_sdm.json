{
    "openapi": "3.0.0",
    "info": {
        "title": "ERP",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "https://api.gungoren-dev.com/v1",
            "description": "Pre Production Server"
        },
        {
            "url": "https://api.gungoren.bel.tr/v1",
            "description": "Production Server"
        },
        {
            "url": "localhost:8080/v1",
            "description": "Local Environment"
        }
    ],
    "paths": {
        "/file": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "Get file",
                "operationId": "840ad7ab0ceb8213e6031b62217aae22",
                "parameters": [
                    {
                        "parameter": "token",
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/octet-stream": {}
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                }
            }
        },
        "/file/upload": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Upload File",
                "description": "Uploads file to the server and returns a unique ID that represents this file. Attach this unique ID to requests to claim this file. Unclaimed files will be removed after 1 hour",
                "operationId": "7aec4543a81d8f38b5966c07c320a0e2",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Key - ID pairs",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "description": "key sent with the request",
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "unique id created by the server",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/file/zip": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Zip Files",
                "description": "Create a zip file from given file URIs and returns the URI for that zip file. Unauthorized or non-existing files will be skipped.",
                "operationId": "8b9dead31b4b8a71841fc8b671b681db",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/authorization"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "properties": {
                                                    "files": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "uri": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/sdm/app/profile": {
            "get": {
                "tags": [
                    "App Profile (Grocer)"
                ],
                "summary": "Get App Profile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/app_profile"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/app/transaction": {
            "get": {
                "tags": [
                    "App Transaction (Grocer)"
                ],
                "summary": "Fetch Transactions",
                "operationId": "1b509ee496b63acffeaae3231af6c27f",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/grocer_transaction_filter"
                    },
                    {
                        "$ref": "#/components/parameters/grocer_transaction_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/grocer_transaction"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/app/transaction/{transaction_id}": {
            "get": {
                "tags": [
                    "App Transaction (Grocer)"
                ],
                "summary": "Get Single Transaction",
                "operationId": "55a7fadb511b05522d66c5895f35628e",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/transaction_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/grocer_transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/app/change_password": {
            "patch": {
                "tags": [
                    "App Profile (Grocer)"
                ],
                "summary": "Change Password",
                "operationId": "42814a595d8eb17348fe1b55521e6c6d",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/change_password_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/app_profile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/app": {
            "post": {
                "tags": [
                    "Transaction (Grocer)"
                ],
                "summary": "Add Pending Transaction",
                "operationId": "216bfb07097cffe6eaf4ef2b7215923f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/pending_transaction_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/sdm/app/citizen_balance": {
            "post": {
                "tags": [
                    "Transaction (Grocer)"
                ],
                "summary": "Check Citizen Balance",
                "operationId": "9c06b6b19d6192a709c2a232edc85000",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/check_citizen_balance_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/sdm/authorize": {
            "post": {
                "tags": [
                    "Auth (Grocer)"
                ],
                "summary": "Auth",
                "operationId": "cba64f7bde1ca69823bda9c3fd6780a1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/grocer_auth_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/grocer_auth"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/forgotten": {
            "post": {
                "tags": [
                    "Forgotten Password (Grocer)"
                ],
                "summary": "Forgotten",
                "description": "Sends password reset link from SMS to grocer's phone",
                "operationId": "ed4e06970c31db94b39036e6cc03fcf4",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/forgotten_password_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/sdm/grocer": {
            "get": {
                "tags": [
                    "Grocer"
                ],
                "summary": "Fetch Grocers",
                "operationId": "df1141d9534943ccd5dad6986e29a85d",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/grocer_filter"
                    },
                    {
                        "$ref": "#/components/parameters/grocer_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/grocer_profile"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Grocer"
                ],
                "summary": "Create Grocer",
                "operationId": "a9a489a96feef417960f28fd4db8a779",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/create_grocer_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/grocer_profile"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/grocer/{grocer_id}": {
            "get": {
                "tags": [
                    "Grocer"
                ],
                "summary": "Get Single Grocer",
                "operationId": "5defdc7ec5330a0317ca9bb3020e8526",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/grocer_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/grocer_profile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Create Transaction",
                "operationId": "8727cc9870a6e0e5b06fee3c215f4faa",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/grocer_id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/create_transaction_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/grocer/{grocer_id}/transaction": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Fetch Transactions For Single Grocer",
                "operationId": "465e4ca96e5d15916e70ec30536c0f52",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/grocer_id"
                    },
                    {
                        "$ref": "#/components/parameters/grocer_transaction_filter"
                    },
                    {
                        "$ref": "#/components/parameters/grocer_transaction_sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/grocer_transaction"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/grocer/{grocer_id}/transaction/{transaction_id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Single Transaction For Single Grocer",
                "operationId": "f8583dd43850b1e53cdc3afe9fd5031f",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/grocer_id"
                    },
                    {
                        "$ref": "#/components/parameters/transaction_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/grocer_transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sdm/new_password": {
            "post": {
                "tags": [
                    "Creating First Password (Grocer)"
                ],
                "summary": "CreatingFirstPassword",
                "operationId": "6860a4bc1f8dc9b216266c975b45f319",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_for_creating_first_password"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/creating_first_password_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/sdm/reset_password": {
            "post": {
                "tags": [
                    "Reset Password (Grocer)"
                ],
                "summary": "ResetPassword",
                "operationId": "b2a698c10885d7d7025275d2044ecee6",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/token_for_reset_password"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/reset_password_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/204"
                    }
                }
            }
        },
        "/sdm/verify_transaction": {
            "post": {
                "tags": [
                    "Transaction (Grocer)"
                ],
                "summary": "Verify Transaction",
                "operationId": "ce402d05c17c1b524f9a9912183f03fc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "properties": {
                                            "attributes": {
                                                "$ref": "#/components/schemas/verify_transaction_post_body"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/verified_transaction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "authorization": {
                "type": "string"
            },
            "error": {
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "errors": {
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                },
                "type": "object"
            },
            "personnel_basic": {
                "title": "Personnel Basic",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "image_uri": {
                                "nullable": true,
                                "type": "string",
                                "format": "uri"
                            },
                            "firstname": {
                                "type": "string"
                            },
                            "lastname": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "citizen": {
                "title": "Citizen",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "tcno": {
                                "type": "string",
                                "maxLength": 11,
                                "minLength": 11
                            },
                            "firstname": {
                                "nullable": true,
                                "type": "string"
                            },
                            "lastname": {
                                "nullable": true,
                                "type": "string"
                            },
                            "gender": {
                                "nullable": true,
                                "description": "`1 = Female`, `2 = Male`",
                                "type": "integer"
                            },
                            "address": {
                                "nullable": true,
                                "type": "string"
                            },
                            "phone": {
                                "nullable": true,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "corporation": {
                "title": "Corporation",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "tax_number": {
                                "type": "string",
                                "maxLength": 11,
                                "minLength": 10
                            },
                            "tax_office": {
                                "nullable": true,
                                "type": "string"
                            },
                            "title": {
                                "nullable": true,
                                "type": "string"
                            },
                            "address": {
                                "nullable": true,
                                "type": "string"
                            },
                            "phone": {
                                "nullable": true,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "feature_type": {
                "type": "string",
                "enum": [
                    "parcel",
                    "structure",
                    "numbering",
                    "district",
                    "road",
                    "poi",
                    "custom"
                ]
            },
            "department": {
                "title": "Department",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "parent_department": {
                                "nullable": true,
                                "type": "string"
                            },
                            "director": {
                                "nullable": true,
                                "type": "string"
                            },
                            "director_allowed_parent_depth": {
                                "type": "integer"
                            },
                            "director_allowed_child_depth": {
                                "type": "integer"
                            },
                            "member_allowed_parent_depth": {
                                "type": "integer"
                            },
                            "member_allowed_child_depth": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "director": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "comment_request_body": {
                "title": "Comment",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "department_basic": {
                "title": "Department",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "task": {
                "title": "Task",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "assigner": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "nullable": true,
                                "type": "string"
                            },
                            "start_date": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "due_date": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "location": {
                                "nullable": true,
                                "properties": {
                                    "latitude": {
                                        "type": "string",
                                        "maximum": "90",
                                        "minimum": "-90"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "maximum": "180",
                                        "minimum": "-180"
                                    }
                                },
                                "type": "object"
                            },
                            "priority": {
                                "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "status": {
                                "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "subtask": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/subtask"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "assignee": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "subtask": {
                "title": "Subtask",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "assigner": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "nullable": true,
                                "type": "string"
                            },
                            "due_date": {
                                "nullable": true,
                                "type": "string",
                                "format": "date-time"
                            },
                            "location": {
                                "nullable": true,
                                "properties": {
                                    "latitude": {
                                        "type": "string",
                                        "maximum": "90",
                                        "minimum": "-90"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "maximum": "180",
                                        "minimum": "-180"
                                    }
                                },
                                "type": "object"
                            },
                            "priority": {
                                "description": "`1 = Clear`, `2 = Low`, `3 = Medium`, `4 = High`, `5 = Urgent`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "status": {
                                "description": "`1 = Open`, `2 = InProgress`, `3 = Delayed`, `4 = Complete`, `5 = Cancelled`",
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "assignee": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/personnel_basic"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "comment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/comment"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "event": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/event"
                                        }
                                    }
                                },
                                "type": "object"
                            },
                            "attachment": {
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/attachment"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "comment": {
                "title": "Comment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "edited_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "commented_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "commentator": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "event": {
                "title": "Event",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "type": {
                                "description": "`StatusChanged = 1`, `TitleChanged = 2`, `Assigned = 3`, `Deassigned = 4`, `DescriptionUpdated = 5`, `DueDateChanged = 6`, `SubtaskCreated = 7`, `SubtaskRemoved = 8`, `PriorityChanged = 10`, `LocationChanged = 11`, `AttachmentAttached = 12`, `AttachmentRemoved = 13`, `StartDateChanged = 14`",
                                "type": "integer",
                                "maximum": 14,
                                "minimum": 1
                            },
                            "occurred_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "data": {
                                "description": "\n * \t\t\t\t\tDepending on the event type, this object will contain following properties: \n * \t\t\t\t\t`type == 1` => `{ status_old: int, status_new: int }`,\n * \t\t\t\t\t`type == 2` => `{ title_old: string, title_new: string }`,\n * \t\t\t\t\t`type == 3` => `{ assignee: int }`,\n * \t\t\t\t\t`type == 4` => `{ assignee: int }`,\n * \t\t\t\t\t`type == 5` => `{ description: string }`,\n * \t\t\t\t\t`type == 6` => `{ due_date_old: string(datetime), due_date_new: string(datetime) }`,\n * \t\t\t\t\t`type == 7` => `{ title: string }`,\n * \t\t\t\t\t`type == 8` => `{ title: string }`,\n * \t\t\t\t\t`type == 10` => `{ priority_old: int, priority_new: int }`,\n * \t\t\t\t\t`type == 11` => `{ location: { latitude: string, longitude: string } }`,\n * \t\t\t\t\t`type == 12` => `{ name: string }`,\n * \t\t\t\t\t`type == 13` => `{ name: string }`,\n * \t\t\t\t\t`type == 14` => `{ start_date_old: string(datetime), start_date_new: string(datetime) }`\n * \t\t\t\t",
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "enabler": {
                                "nullable": true,
                                "description": "NULL if event was triggered by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "attachment": {
                "title": "attachment",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "extension": {
                                "nullable": true,
                                "type": "string"
                            },
                            "uri": {
                                "description": "Direct access URI",
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "type": "object"
                    },
                    "relationships": {
                        "properties": {
                            "uploader": {
                                "nullable": "true",
                                "description": "NULL if attachment was added by the system",
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/personnel_basic"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "procedure_type": {
                "description": "\n * \t\t\t`(Numarataj) Numbering = 1`\n *\t\t\t`(Yapı Ruhsatı) BuildingPermit = 2`\n *\t\t\t`(İnşaat İstikamet Rölevesi) ConstructionDirectionSurveying = 3`\n *\t\t\t`(Kot Kesit Rölevesi) ElevationProfileSurveying = 4`\n *\t\t\t`(Yola Terk) Expropriation = 5`\n *\t\t\t`(İfraz) Parcelling = 6`\n *\t\t\t`(Tevhit) Amalgamation = 7`\n *\t\t\t`(Ecrimisil) OccupationCompensationByManagement = 8`\n *\t\t\t`(Ecrimisil - Vatandaş) OccupationCompensationByCitizen = 9`\n *\t\t\t`(1/5000 Ölçekli Plan Değişimi) PlanChange1to5000Internal = 10`\n *\t\t\t`(1/5000 Ölçekli Plan Değişimi - Vatandaş) PlanChange1to5000External = 11`\n *\t\t\t`(Yıkım Ruhsatı) DeconstructionPermit = 12`\n *\t\t\t`(Avan Proje) PreliminaryDesign = 13`\n *\t\t\t`(Yazılı İmar Durumu) WrittenZoningStatus = 14`\n *\t\t\t`Riskli Yapı = 15`\n *\t\t\t`Kira Yardımı (Mal Sahibi) = 16`\n *\t\t\t`Kira Yardımı (Kiracı) = 17`\n *\t\t\t`Test = 18`",
                "type": "integer"
            },
            "app_profile": {
                "title": "Grocer Profile",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "first_name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            },
                            "tc_kimlik": {
                                "type": "string"
                            },
                            "balance": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "tax_office": {
                                "type": "string"
                            },
                            "tax_number": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "town": {
                                "type": "string"
                            },
                            "district": {
                                "type": "string"
                            },
                            "street": {
                                "type": "string"
                            },
                            "building_no": {
                                "type": "string"
                            },
                            "door_no": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "change_password_post_body": {
                "title": "ChangeGrocerPassword",
                "properties": {
                    "new_password": {
                        "type": "string"
                    },
                    "confirm_password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "verify_transaction_post_body": {
                "title": "Transaction",
                "properties": {
                    "verification_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "transaction_status": {
                "title": "status",
                "description": "1 = Completed, 2= Pending, 3= Canceled",
                "type": "integer",
                "enum": [
                    1,
                    2,
                    3
                ]
            },
            "grocer_transaction": {
                "title": "Transaction (Grocer)",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "deptor_id": {
                                "type": "string"
                            },
                            "payee_id": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#/components/schemas/transaction_status"
                            },
                            "transaction_date": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "verified_transaction": {
                "title": "Transaction (Grocer)",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "deptor_id": {
                                "type": "string"
                            },
                            "payee_id": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "string"
                            },
                            "status": {
                                "description": "Will always be `1` when transaction completed",
                                "type": "integer",
                                "enum": [
                                    1
                                ]
                            },
                            "transaction_date": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "pending_transaction_post_body": {
                "title": "Transaction",
                "properties": {
                    "citizen_tc_or_phone": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "check_citizen_balance_post_body": {
                "title": "Transaction",
                "properties": {
                    "citizen_tc_or_phone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "grocer_auth_post_body": {
                "title": "Registration",
                "properties": {
                    "phone": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "grocer_auth": {
                "title": "Grocer Auth",
                "properties": {
                    "": {
                        "properties": {
                            "token": {
                                "type": "string"
                            },
                            "token_type": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "creating_first_password_post_body": {
                "title": "Creating First Password",
                "properties": {
                    "new_password": {
                        "type": "string"
                    },
                    "confirm_password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "forgotten_password_post_body": {
                "title": "Forgotten Password",
                "properties": {
                    "phone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "grocer_profile": {
                "title": "Grocer Profile",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "first_name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            },
                            "tc_kimlik": {
                                "type": "string"
                            },
                            "balance": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "tax_office": {
                                "type": "string"
                            },
                            "tax_number": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "town": {
                                "type": "string"
                            },
                            "district": {
                                "type": "string"
                            },
                            "street": {
                                "type": "string"
                            },
                            "building_no": {
                                "type": "string"
                            },
                            "door_no": {
                                "type": "string"
                            },
                            "created_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_used_on": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_on": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "create_grocer_post_body": {
                "title": "Create Grocer",
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "tc_kimlik": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "tax_office": {
                        "type": "string"
                    },
                    "tax_number": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "town": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "building_no": {
                        "type": "string"
                    },
                    "door_no": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "reset_password_post_body": {
                "title": "Reset Password",
                "properties": {
                    "new_password": {
                        "type": "string"
                    },
                    "confirm_password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "transaction": {
                "title": "Transaction",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "properties": {
                            "deptor_id": {
                                "type": "string"
                            },
                            "payee_id": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "string"
                            },
                            "status": {
                                "description": "Will always be `1` when stuff added transaction ",
                                "type": "integer",
                                "enum": [
                                    1
                                ]
                            },
                            "transaction_date": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "create_transaction_post_body": {
                "title": "Create Transaction",
                "properties": {
                    "amount": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "204": {
                "description": "No Content"
            },
            "400": {
                "description": "BadRequest",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            },
            "401": {
                "description": "Unatuhorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            },
            "404": {
                "description": "NotFound",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errors"
                        }
                    }
                }
            }
        },
        "parameters": {
            "authorization": {
                "name": "Authorization",
                "in": "header",
                "schema": {
                    "$ref": "#/components/schemas/authorization"
                }
            },
            "comment_include": {
                "name": "include",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "commentator"
                    ]
                }
            },
            "grocer_transaction_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "transaction_date",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "grocer_transaction_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "transaction_date",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "transaction_id": {
                "name": "transaction_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "token_for_creating_first_password": {
                "name": "token_password",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "grocer_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "grocer_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "created_on",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "grocer_id": {
                "name": "grocer_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "token_for_reset_password": {
                "name": "token",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "transaction_filter": {
                "name": "filter",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "transaction_date",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            },
            "transaction_sort": {
                "name": "sort",
                "in": "query",
                "schema": {
                    "type": "string",
                    "enum": [
                        "transaction_date",
                        "last_used_on",
                        "updated_on"
                    ]
                }
            }
        }
    },
    "x-tagGroups": [
        {
            "name": "Task Management",
            "tags": [
                "Task",
                "Subtask",
                "Assignement",
                "Comment",
                "Event",
                "Attachment"
            ]
        },
        {
            "name": "File",
            "tags": [
                "File"
            ]
        },
        {
            "name": "Procedure Management",
            "tags": [
                "Procedure",
                "Subprocedure",
                "Step",
                "Event (Procedure)",
                "Comment (Step)",
                "Attachment (Step)"
            ]
        },
        {
            "name": "GIS",
            "tags": [
                "Stats",
                "Feature",
                "Feature (Public)",
                "Search",
                "Search (Public)",
                "POI",
                "POI (Public)",
                "Custom Feature",
                "Custom Feature (Public)",
                "District",
                "District (Public)",
                "CSBM",
                "CSBM (Public)",
                "Road",
                "Road (Public)",
                "Parcel",
                "Parcel (Public)",
                "Structure",
                "Structure (Public)",
                "Numbering",
                "Numbering (Public)",
                "Independent Section",
                "Independent Section (Public)",
                "Inhabitant",
                "Document",
                "Tag (Structure)",
                "Tag (Parcel)",
                "Comment (Structure)",
                "Comment (Parcel)",
                "Attachment (Structure)",
                "Procedure (Structure)",
                "Procedure (Parcel)",
                "Plan"
            ]
        },
        {
            "name": "Sdm",
            "tags": [
                "Auth (Grocer)",
                "Forgotten Password (Grocer)",
                "Reset Password (Grocer)",
                "Creating First Password (Grocer)",
                "App Transaction (Grocer)",
                "App Profile (Grocer)",
                "Grocer",
                "Transaction"
            ]
        },
        {
            "name": "Polling",
            "tags": [
                "Auth",
                "Queue",
                "DirectMessage",
                "DemoMessage",
                "Message",
                "Citizen",
                "MessageTemplate",
                "FilterTemplate",
                "Category (Citizen)",
                "Tag (Citizen)",
                "Survey",
                "Submission",
                "Submission (Public)",
                "Filter",
                "Tag Rule"
            ]
        }
    ]
}